/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 496.0, "minX": 0.0, "maxY": 103632.0, "series": [{"data": [[0.0, 8156.0], [0.1, 8156.0], [0.2, 8156.0], [0.3, 9870.0], [0.4, 9870.0], [0.5, 10694.0], [0.6, 10694.0], [0.7, 10701.0], [0.8, 10701.0], [0.9, 10756.0], [1.0, 10756.0], [1.1, 10777.0], [1.2, 10777.0], [1.3, 11506.0], [1.4, 11506.0], [1.5, 11641.0], [1.6, 11641.0], [1.7, 11646.0], [1.8, 11646.0], [1.9, 11690.0], [2.0, 11690.0], [2.1, 12348.0], [2.2, 12348.0], [2.3, 12540.0], [2.4, 12540.0], [2.5, 12840.0], [2.6, 12840.0], [2.7, 13136.0], [2.8, 13136.0], [2.9, 13328.0], [3.0, 13328.0], [3.1, 13408.0], [3.2, 13408.0], [3.3, 13525.0], [3.4, 13525.0], [3.5, 13671.0], [3.6, 13671.0], [3.7, 14091.0], [3.8, 14091.0], [3.9, 14254.0], [4.0, 14254.0], [4.1, 14312.0], [4.2, 14312.0], [4.3, 15027.0], [4.4, 15027.0], [4.5, 15480.0], [4.6, 15480.0], [4.7, 15507.0], [4.8, 15507.0], [4.9, 15621.0], [5.0, 15621.0], [5.1, 15634.0], [5.2, 15634.0], [5.3, 15699.0], [5.4, 15699.0], [5.5, 15742.0], [5.6, 15742.0], [5.7, 15772.0], [5.8, 15772.0], [5.9, 16065.0], [6.0, 16065.0], [6.1, 16508.0], [6.2, 16508.0], [6.3, 16547.0], [6.4, 16547.0], [6.5, 16775.0], [6.6, 16775.0], [6.7, 16820.0], [6.8, 16820.0], [6.9, 16825.0], [7.0, 16825.0], [7.1, 17032.0], [7.2, 17032.0], [7.3, 17178.0], [7.4, 17178.0], [7.5, 17253.0], [7.6, 17253.0], [7.7, 17287.0], [7.8, 17287.0], [7.9, 17291.0], [8.0, 17291.0], [8.1, 17345.0], [8.2, 17345.0], [8.3, 17459.0], [8.4, 17459.0], [8.5, 17544.0], [8.6, 17544.0], [8.7, 17735.0], [8.8, 17735.0], [8.9, 17744.0], [9.0, 17744.0], [9.1, 17818.0], [9.2, 17818.0], [9.3, 17890.0], [9.4, 17890.0], [9.5, 17922.0], [9.6, 17922.0], [9.7, 18186.0], [9.8, 18186.0], [9.9, 18367.0], [10.0, 18367.0], [10.1, 18440.0], [10.2, 18440.0], [10.3, 18455.0], [10.4, 18455.0], [10.5, 18690.0], [10.6, 18690.0], [10.7, 18701.0], [10.8, 18701.0], [10.9, 18756.0], [11.0, 18756.0], [11.1, 18800.0], [11.2, 18800.0], [11.3, 18992.0], [11.4, 18992.0], [11.5, 19059.0], [11.6, 19059.0], [11.7, 19371.0], [11.8, 19371.0], [11.9, 19600.0], [12.0, 19600.0], [12.1, 19641.0], [12.2, 19641.0], [12.3, 19811.0], [12.4, 19811.0], [12.5, 19843.0], [12.6, 19843.0], [12.7, 19935.0], [12.8, 19935.0], [12.9, 19995.0], [13.0, 19995.0], [13.1, 20069.0], [13.2, 20069.0], [13.3, 20202.0], [13.4, 20202.0], [13.5, 20203.0], [13.6, 20203.0], [13.7, 20240.0], [13.8, 20240.0], [13.9, 20297.0], [14.0, 20297.0], [14.1, 20301.0], [14.2, 20301.0], [14.3, 20324.0], [14.4, 20324.0], [14.5, 20343.0], [14.6, 20343.0], [14.7, 20535.0], [14.8, 20535.0], [14.9, 20685.0], [15.0, 20685.0], [15.1, 20806.0], [15.2, 20806.0], [15.3, 20937.0], [15.4, 20937.0], [15.5, 20955.0], [15.6, 20955.0], [15.7, 20961.0], [15.8, 20961.0], [15.9, 21040.0], [16.0, 21040.0], [16.1, 21067.0], [16.2, 21067.0], [16.3, 21080.0], [16.4, 21080.0], [16.5, 21095.0], [16.6, 21095.0], [16.7, 21096.0], [16.8, 21096.0], [16.9, 21194.0], [17.0, 21194.0], [17.1, 21253.0], [17.2, 21253.0], [17.3, 21310.0], [17.4, 21310.0], [17.5, 21402.0], [17.6, 21402.0], [17.7, 21421.0], [17.8, 21421.0], [17.9, 21450.0], [18.0, 21450.0], [18.1, 21508.0], [18.2, 21508.0], [18.3, 21546.0], [18.4, 21546.0], [18.5, 21636.0], [18.6, 21636.0], [18.7, 21663.0], [18.8, 21663.0], [18.9, 21677.0], [19.0, 21677.0], [19.1, 21694.0], [19.2, 21694.0], [19.3, 21729.0], [19.4, 21729.0], [19.5, 21761.0], [19.6, 21761.0], [19.7, 21818.0], [19.8, 21818.0], [19.9, 21932.0], [20.0, 21932.0], [20.1, 21976.0], [20.2, 21976.0], [20.3, 21994.0], [20.4, 21994.0], [20.5, 22031.0], [20.6, 22031.0], [20.7, 22136.0], [20.8, 22136.0], [20.9, 22160.0], [21.0, 22160.0], [21.1, 22308.0], [21.2, 22308.0], [21.3, 22324.0], [21.4, 22324.0], [21.5, 22350.0], [21.6, 22350.0], [21.7, 22479.0], [21.8, 22479.0], [21.9, 22507.0], [22.0, 22507.0], [22.1, 22691.0], [22.2, 22691.0], [22.3, 22750.0], [22.4, 22750.0], [22.5, 22783.0], [22.6, 22783.0], [22.7, 22842.0], [22.8, 22842.0], [22.9, 22854.0], [23.0, 22854.0], [23.1, 22918.0], [23.2, 22918.0], [23.3, 22944.0], [23.4, 22944.0], [23.5, 23013.0], [23.6, 23013.0], [23.7, 23188.0], [23.8, 23188.0], [23.9, 23258.0], [24.0, 23258.0], [24.1, 23265.0], [24.2, 23265.0], [24.3, 23284.0], [24.4, 23284.0], [24.5, 23317.0], [24.6, 23317.0], [24.7, 23364.0], [24.8, 23364.0], [24.9, 23460.0], [25.0, 23460.0], [25.1, 23510.0], [25.2, 23510.0], [25.3, 23527.0], [25.4, 23527.0], [25.5, 23534.0], [25.6, 23534.0], [25.7, 23537.0], [25.8, 23537.0], [25.9, 23594.0], [26.0, 23594.0], [26.1, 23654.0], [26.2, 23654.0], [26.3, 23681.0], [26.4, 23681.0], [26.5, 23747.0], [26.6, 23747.0], [26.7, 23759.0], [26.8, 23759.0], [26.9, 23851.0], [27.0, 23851.0], [27.1, 23929.0], [27.2, 23929.0], [27.3, 24000.0], [27.4, 24000.0], [27.5, 24000.0], [27.6, 24000.0], [27.7, 24011.0], [27.8, 24011.0], [27.9, 24015.0], [28.0, 24015.0], [28.1, 24060.0], [28.2, 24060.0], [28.3, 24074.0], [28.4, 24074.0], [28.5, 24115.0], [28.6, 24115.0], [28.7, 24169.0], [28.8, 24169.0], [28.9, 24178.0], [29.0, 24178.0], [29.1, 24266.0], [29.2, 24266.0], [29.3, 24282.0], [29.4, 24282.0], [29.5, 24316.0], [29.6, 24316.0], [29.7, 24347.0], [29.8, 24347.0], [29.9, 24355.0], [30.0, 24355.0], [30.1, 24443.0], [30.2, 24443.0], [30.3, 24444.0], [30.4, 24444.0], [30.5, 24451.0], [30.6, 24451.0], [30.7, 24454.0], [30.8, 24454.0], [30.9, 24462.0], [31.0, 24462.0], [31.1, 24478.0], [31.2, 24478.0], [31.3, 24511.0], [31.4, 24511.0], [31.5, 24514.0], [31.6, 24514.0], [31.7, 24524.0], [31.8, 24524.0], [31.9, 24593.0], [32.0, 24593.0], [32.1, 24648.0], [32.2, 24648.0], [32.3, 24656.0], [32.4, 24656.0], [32.5, 24669.0], [32.6, 24669.0], [32.7, 24682.0], [32.8, 24682.0], [32.9, 24743.0], [33.0, 24743.0], [33.1, 24759.0], [33.2, 24759.0], [33.3, 24759.0], [33.4, 24759.0], [33.5, 24763.0], [33.6, 24763.0], [33.7, 24767.0], [33.8, 24767.0], [33.9, 24793.0], [34.0, 24793.0], [34.1, 24827.0], [34.2, 24827.0], [34.3, 24829.0], [34.4, 24829.0], [34.5, 24852.0], [34.6, 24852.0], [34.7, 24864.0], [34.8, 24864.0], [34.9, 24885.0], [35.0, 24885.0], [35.1, 24942.0], [35.2, 24942.0], [35.3, 25092.0], [35.4, 25092.0], [35.5, 25106.0], [35.6, 25106.0], [35.7, 25107.0], [35.8, 25107.0], [35.9, 25158.0], [36.0, 25158.0], [36.1, 25222.0], [36.2, 25222.0], [36.3, 25231.0], [36.4, 25231.0], [36.5, 25237.0], [36.6, 25237.0], [36.7, 25256.0], [36.8, 25256.0], [36.9, 25351.0], [37.0, 25351.0], [37.1, 25398.0], [37.2, 25398.0], [37.3, 25481.0], [37.4, 25481.0], [37.5, 25715.0], [37.6, 25715.0], [37.7, 25729.0], [37.8, 25729.0], [37.9, 25734.0], [38.0, 25734.0], [38.1, 25736.0], [38.2, 25736.0], [38.3, 25743.0], [38.4, 25743.0], [38.5, 25763.0], [38.6, 25763.0], [38.7, 25766.0], [38.8, 25766.0], [38.9, 25798.0], [39.0, 25798.0], [39.1, 25872.0], [39.2, 25872.0], [39.3, 25886.0], [39.4, 25886.0], [39.5, 25892.0], [39.6, 25892.0], [39.7, 25906.0], [39.8, 25906.0], [39.9, 25916.0], [40.0, 25916.0], [40.1, 25932.0], [40.2, 25932.0], [40.3, 25974.0], [40.4, 25974.0], [40.5, 25989.0], [40.6, 25989.0], [40.7, 26011.0], [40.8, 26011.0], [40.9, 26035.0], [41.0, 26035.0], [41.1, 26040.0], [41.2, 26040.0], [41.3, 26056.0], [41.4, 26056.0], [41.5, 26059.0], [41.6, 26059.0], [41.7, 26079.0], [41.8, 26079.0], [41.9, 26192.0], [42.0, 26192.0], [42.1, 26213.0], [42.2, 26213.0], [42.3, 26217.0], [42.4, 26217.0], [42.5, 26301.0], [42.6, 26301.0], [42.7, 26350.0], [42.8, 26350.0], [42.9, 26407.0], [43.0, 26407.0], [43.1, 26449.0], [43.2, 26449.0], [43.3, 26462.0], [43.4, 26462.0], [43.5, 26508.0], [43.6, 26508.0], [43.7, 26554.0], [43.8, 26554.0], [43.9, 26604.0], [44.0, 26604.0], [44.1, 26651.0], [44.2, 26651.0], [44.3, 26704.0], [44.4, 26704.0], [44.5, 26781.0], [44.6, 26781.0], [44.7, 26878.0], [44.8, 26878.0], [44.9, 26889.0], [45.0, 26889.0], [45.1, 26890.0], [45.2, 26890.0], [45.3, 26895.0], [45.4, 26895.0], [45.5, 26916.0], [45.6, 26916.0], [45.7, 27018.0], [45.8, 27018.0], [45.9, 27051.0], [46.0, 27051.0], [46.1, 27077.0], [46.2, 27077.0], [46.3, 27085.0], [46.4, 27085.0], [46.5, 27095.0], [46.6, 27095.0], [46.7, 27156.0], [46.8, 27156.0], [46.9, 27191.0], [47.0, 27191.0], [47.1, 27208.0], [47.2, 27208.0], [47.3, 27322.0], [47.4, 27322.0], [47.5, 27393.0], [47.6, 27393.0], [47.7, 27395.0], [47.8, 27395.0], [47.9, 27401.0], [48.0, 27401.0], [48.1, 27405.0], [48.2, 27405.0], [48.3, 27431.0], [48.4, 27431.0], [48.5, 27444.0], [48.6, 27444.0], [48.7, 27453.0], [48.8, 27453.0], [48.9, 27548.0], [49.0, 27548.0], [49.1, 27593.0], [49.2, 27593.0], [49.3, 27627.0], [49.4, 27627.0], [49.5, 27654.0], [49.6, 27654.0], [49.7, 27687.0], [49.8, 27687.0], [49.9, 27704.0], [50.0, 27704.0], [50.1, 27704.0], [50.2, 27718.0], [50.3, 27718.0], [50.4, 27782.0], [50.5, 27782.0], [50.6, 27806.0], [50.7, 27806.0], [50.8, 27812.0], [50.9, 27812.0], [51.0, 27874.0], [51.1, 27874.0], [51.2, 27890.0], [51.3, 27890.0], [51.4, 27942.0], [51.5, 27942.0], [51.6, 27962.0], [51.7, 27962.0], [51.8, 27967.0], [51.9, 27967.0], [52.0, 27984.0], [52.1, 27984.0], [52.2, 28007.0], [52.3, 28007.0], [52.4, 28011.0], [52.5, 28011.0], [52.6, 28058.0], [52.7, 28058.0], [52.8, 28122.0], [52.9, 28122.0], [53.0, 28124.0], [53.1, 28124.0], [53.2, 28148.0], [53.3, 28148.0], [53.4, 28154.0], [53.5, 28154.0], [53.6, 28166.0], [53.7, 28166.0], [53.8, 28174.0], [53.9, 28174.0], [54.0, 28222.0], [54.1, 28222.0], [54.2, 28225.0], [54.3, 28225.0], [54.4, 28244.0], [54.5, 28244.0], [54.6, 28257.0], [54.7, 28257.0], [54.8, 28263.0], [54.9, 28263.0], [55.0, 28280.0], [55.1, 28280.0], [55.2, 28324.0], [55.3, 28324.0], [55.4, 28387.0], [55.5, 28387.0], [55.6, 28406.0], [55.7, 28406.0], [55.8, 28446.0], [55.9, 28446.0], [56.0, 28479.0], [56.1, 28479.0], [56.2, 28488.0], [56.3, 28488.0], [56.4, 28489.0], [56.5, 28489.0], [56.6, 28503.0], [56.7, 28503.0], [56.8, 28509.0], [56.9, 28509.0], [57.0, 28559.0], [57.1, 28559.0], [57.2, 28582.0], [57.3, 28582.0], [57.4, 28588.0], [57.5, 28588.0], [57.6, 28599.0], [57.7, 28599.0], [57.8, 28601.0], [57.9, 28601.0], [58.0, 28602.0], [58.1, 28602.0], [58.2, 28657.0], [58.3, 28657.0], [58.4, 28681.0], [58.5, 28681.0], [58.6, 28741.0], [58.7, 28741.0], [58.8, 28745.0], [58.9, 28745.0], [59.0, 28755.0], [59.1, 28755.0], [59.2, 28769.0], [59.3, 28769.0], [59.4, 28799.0], [59.5, 28799.0], [59.6, 28817.0], [59.7, 28817.0], [59.8, 28847.0], [59.9, 28847.0], [60.0, 28859.0], [60.1, 28859.0], [60.2, 28890.0], [60.3, 28890.0], [60.4, 28906.0], [60.5, 28906.0], [60.6, 28917.0], [60.7, 28917.0], [60.8, 28918.0], [60.9, 28918.0], [61.0, 28924.0], [61.1, 28924.0], [61.2, 28928.0], [61.3, 28928.0], [61.4, 29050.0], [61.5, 29050.0], [61.6, 29070.0], [61.7, 29070.0], [61.8, 29133.0], [61.9, 29133.0], [62.0, 29146.0], [62.1, 29146.0], [62.2, 29175.0], [62.3, 29175.0], [62.4, 29190.0], [62.5, 29190.0], [62.6, 29192.0], [62.7, 29192.0], [62.8, 29192.0], [62.9, 29192.0], [63.0, 29222.0], [63.1, 29222.0], [63.2, 29232.0], [63.3, 29232.0], [63.4, 29241.0], [63.5, 29241.0], [63.6, 29246.0], [63.7, 29246.0], [63.8, 29268.0], [63.9, 29268.0], [64.0, 29347.0], [64.1, 29347.0], [64.2, 29348.0], [64.3, 29348.0], [64.4, 29353.0], [64.5, 29353.0], [64.6, 29376.0], [64.7, 29376.0], [64.8, 29462.0], [64.9, 29462.0], [65.0, 29467.0], [65.1, 29467.0], [65.2, 29476.0], [65.3, 29476.0], [65.4, 29500.0], [65.5, 29500.0], [65.6, 29530.0], [65.7, 29530.0], [65.8, 29546.0], [65.9, 29546.0], [66.0, 29551.0], [66.1, 29551.0], [66.2, 29562.0], [66.3, 29562.0], [66.4, 29571.0], [66.5, 29571.0], [66.6, 29600.0], [66.7, 29600.0], [66.8, 29614.0], [66.9, 29614.0], [67.0, 29668.0], [67.1, 29668.0], [67.2, 29702.0], [67.3, 29702.0], [67.4, 29741.0], [67.5, 29741.0], [67.6, 29800.0], [67.7, 29800.0], [67.8, 29826.0], [67.9, 29826.0], [68.0, 29827.0], [68.1, 29827.0], [68.2, 29829.0], [68.3, 29829.0], [68.4, 29856.0], [68.5, 29856.0], [68.6, 29873.0], [68.7, 29873.0], [68.8, 29875.0], [68.9, 29875.0], [69.0, 29882.0], [69.1, 29882.0], [69.2, 29906.0], [69.3, 29906.0], [69.4, 29953.0], [69.5, 29953.0], [69.6, 29959.0], [69.7, 29959.0], [69.8, 29973.0], [69.9, 29973.0], [70.0, 29997.0], [70.1, 29997.0], [70.2, 30027.0], [70.3, 30027.0], [70.4, 30045.0], [70.5, 30045.0], [70.6, 30062.0], [70.7, 30062.0], [70.8, 30082.0], [70.9, 30082.0], [71.0, 30121.0], [71.1, 30121.0], [71.2, 30136.0], [71.3, 30136.0], [71.4, 30145.0], [71.5, 30145.0], [71.6, 30158.0], [71.7, 30158.0], [71.8, 30227.0], [71.9, 30227.0], [72.0, 30228.0], [72.1, 30228.0], [72.2, 30247.0], [72.3, 30247.0], [72.4, 30350.0], [72.5, 30350.0], [72.6, 30418.0], [72.7, 30418.0], [72.8, 30434.0], [72.9, 30434.0], [73.0, 30471.0], [73.1, 30471.0], [73.2, 30508.0], [73.3, 30508.0], [73.4, 30547.0], [73.5, 30547.0], [73.6, 30655.0], [73.7, 30655.0], [73.8, 30733.0], [73.9, 30733.0], [74.0, 30755.0], [74.1, 30755.0], [74.2, 30801.0], [74.3, 30801.0], [74.4, 30829.0], [74.5, 30829.0], [74.6, 30830.0], [74.7, 30830.0], [74.8, 30942.0], [74.9, 30942.0], [75.0, 30953.0], [75.1, 30953.0], [75.2, 31015.0], [75.3, 31015.0], [75.4, 31016.0], [75.5, 31016.0], [75.6, 31034.0], [75.7, 31034.0], [75.8, 31043.0], [75.9, 31043.0], [76.0, 31047.0], [76.1, 31047.0], [76.2, 31053.0], [76.3, 31053.0], [76.4, 31204.0], [76.5, 31204.0], [76.6, 31228.0], [76.7, 31228.0], [76.8, 31318.0], [76.9, 31318.0], [77.0, 31348.0], [77.1, 31348.0], [77.2, 31459.0], [77.3, 31459.0], [77.4, 31467.0], [77.5, 31467.0], [77.6, 31534.0], [77.7, 31534.0], [77.8, 31573.0], [77.9, 31573.0], [78.0, 31574.0], [78.1, 31574.0], [78.2, 31576.0], [78.3, 31576.0], [78.4, 31582.0], [78.5, 31582.0], [78.6, 31615.0], [78.7, 31615.0], [78.8, 31705.0], [78.9, 31705.0], [79.0, 31711.0], [79.1, 31711.0], [79.2, 31791.0], [79.3, 31791.0], [79.4, 31867.0], [79.5, 31867.0], [79.6, 31868.0], [79.7, 31868.0], [79.8, 31904.0], [79.9, 31904.0], [80.0, 31910.0], [80.1, 31910.0], [80.2, 31912.0], [80.3, 31912.0], [80.4, 31915.0], [80.5, 31915.0], [80.6, 31915.0], [80.7, 31915.0], [80.8, 31982.0], [80.9, 31982.0], [81.0, 31994.0], [81.1, 31994.0], [81.2, 32044.0], [81.3, 32044.0], [81.4, 32049.0], [81.5, 32049.0], [81.6, 32060.0], [81.7, 32060.0], [81.8, 32093.0], [81.9, 32093.0], [82.0, 32189.0], [82.1, 32189.0], [82.2, 32332.0], [82.3, 32332.0], [82.4, 32428.0], [82.5, 32428.0], [82.6, 32433.0], [82.7, 32433.0], [82.8, 32452.0], [82.9, 32452.0], [83.0, 32475.0], [83.1, 32475.0], [83.2, 32493.0], [83.3, 32493.0], [83.4, 32518.0], [83.5, 32518.0], [83.6, 32557.0], [83.7, 32557.0], [83.8, 32572.0], [83.9, 32572.0], [84.0, 32580.0], [84.1, 32580.0], [84.2, 32590.0], [84.3, 32590.0], [84.4, 32618.0], [84.5, 32618.0], [84.6, 32653.0], [84.7, 32653.0], [84.8, 32658.0], [84.9, 32658.0], [85.0, 32682.0], [85.1, 32682.0], [85.2, 32686.0], [85.3, 32686.0], [85.4, 33003.0], [85.5, 33003.0], [85.6, 33015.0], [85.7, 33015.0], [85.8, 33041.0], [85.9, 33041.0], [86.0, 33066.0], [86.1, 33066.0], [86.2, 33124.0], [86.3, 33124.0], [86.4, 33153.0], [86.5, 33153.0], [86.6, 33189.0], [86.7, 33189.0], [86.8, 33434.0], [86.9, 33434.0], [87.0, 33444.0], [87.1, 33444.0], [87.2, 33481.0], [87.3, 33481.0], [87.4, 33526.0], [87.5, 33526.0], [87.6, 33534.0], [87.7, 33534.0], [87.8, 33561.0], [87.9, 33561.0], [88.0, 33593.0], [88.1, 33593.0], [88.2, 33620.0], [88.3, 33620.0], [88.4, 33649.0], [88.5, 33649.0], [88.6, 33830.0], [88.7, 33830.0], [88.8, 33896.0], [88.9, 33896.0], [89.0, 34157.0], [89.1, 34157.0], [89.2, 34185.0], [89.3, 34185.0], [89.4, 34187.0], [89.5, 34187.0], [89.6, 34248.0], [89.7, 34248.0], [89.8, 34297.0], [89.9, 34297.0], [90.0, 34359.0], [90.1, 34359.0], [90.2, 34517.0], [90.3, 34517.0], [90.4, 34601.0], [90.5, 34601.0], [90.6, 34621.0], [90.7, 34621.0], [90.8, 34694.0], [90.9, 34694.0], [91.0, 34694.0], [91.1, 34694.0], [91.2, 34721.0], [91.3, 34721.0], [91.4, 34808.0], [91.5, 34808.0], [91.6, 35056.0], [91.7, 35056.0], [91.8, 35086.0], [91.9, 35086.0], [92.0, 35174.0], [92.1, 35174.0], [92.2, 35330.0], [92.3, 35330.0], [92.4, 35382.0], [92.5, 35382.0], [92.6, 35394.0], [92.7, 35394.0], [92.8, 35634.0], [92.9, 35634.0], [93.0, 35856.0], [93.1, 35856.0], [93.2, 35879.0], [93.3, 35879.0], [93.4, 36081.0], [93.5, 36081.0], [93.6, 36255.0], [93.7, 36255.0], [93.8, 36290.0], [93.9, 36290.0], [94.0, 36295.0], [94.1, 36295.0], [94.2, 36547.0], [94.3, 36547.0], [94.4, 36611.0], [94.5, 36611.0], [94.6, 37306.0], [94.7, 37306.0], [94.8, 37441.0], [94.9, 37441.0], [95.0, 37503.0], [95.1, 37503.0], [95.2, 37811.0], [95.3, 37811.0], [95.4, 38248.0], [95.5, 38248.0], [95.6, 38529.0], [95.7, 38529.0], [95.8, 38562.0], [95.9, 38562.0], [96.0, 38722.0], [96.1, 38722.0], [96.2, 38903.0], [96.3, 38903.0], [96.4, 39149.0], [96.5, 39149.0], [96.6, 39573.0], [96.7, 39573.0], [96.8, 39747.0], [96.9, 39747.0], [97.0, 39978.0], [97.1, 39978.0], [97.2, 40328.0], [97.3, 40328.0], [97.4, 40698.0], [97.5, 40698.0], [97.6, 40752.0], [97.7, 40752.0], [97.8, 41012.0], [97.9, 41012.0], [98.0, 41669.0], [98.1, 41669.0], [98.2, 46623.0], [98.3, 46623.0], [98.4, 47951.0], [98.5, 47951.0], [98.6, 49774.0], [98.7, 49774.0], [98.8, 59364.0], [98.9, 59364.0], [99.0, 64892.0], [99.1, 64892.0], [99.2, 69158.0], [99.3, 69158.0], [99.4, 76736.0], [99.5, 76736.0], [99.6, 79704.0], [99.7, 79704.0], [99.8, 103049.0], [99.9, 103049.0], [100.0, 103049.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 496.0], [0.1, 496.0], [0.2, 496.0], [0.3, 503.0], [0.4, 503.0], [0.5, 504.0], [0.6, 504.0], [0.7, 504.0], [0.8, 504.0], [0.9, 504.0], [1.0, 504.0], [1.1, 505.0], [1.2, 505.0], [1.3, 505.0], [1.4, 505.0], [1.5, 507.0], [1.6, 507.0], [1.7, 507.0], [1.8, 507.0], [1.9, 508.0], [2.0, 508.0], [2.1, 508.0], [2.2, 508.0], [2.3, 509.0], [2.4, 509.0], [2.5, 510.0], [2.6, 510.0], [2.7, 510.0], [2.8, 510.0], [2.9, 511.0], [3.0, 511.0], [3.1, 511.0], [3.2, 511.0], [3.3, 513.0], [3.4, 513.0], [3.5, 514.0], [3.6, 514.0], [3.7, 515.0], [3.8, 515.0], [3.9, 515.0], [4.0, 515.0], [4.1, 515.0], [4.2, 515.0], [4.3, 516.0], [4.4, 516.0], [4.5, 517.0], [4.6, 517.0], [4.7, 517.0], [4.8, 517.0], [4.9, 517.0], [5.0, 517.0], [5.1, 517.0], [5.2, 517.0], [5.3, 518.0], [5.4, 518.0], [5.5, 518.0], [5.6, 518.0], [5.7, 518.0], [5.8, 518.0], [5.9, 518.0], [6.0, 518.0], [6.1, 518.0], [6.2, 518.0], [6.3, 519.0], [6.4, 519.0], [6.5, 520.0], [6.6, 520.0], [6.7, 520.0], [6.8, 520.0], [6.9, 521.0], [7.0, 521.0], [7.1, 521.0], [7.2, 521.0], [7.3, 521.0], [7.4, 521.0], [7.5, 522.0], [7.6, 522.0], [7.7, 522.0], [7.8, 522.0], [7.9, 522.0], [8.0, 522.0], [8.1, 523.0], [8.2, 523.0], [8.3, 523.0], [8.4, 523.0], [8.5, 523.0], [8.6, 523.0], [8.7, 524.0], [8.8, 524.0], [8.9, 524.0], [9.0, 524.0], [9.1, 524.0], [9.2, 524.0], [9.3, 524.0], [9.4, 524.0], [9.5, 525.0], [9.6, 525.0], [9.7, 525.0], [9.8, 525.0], [9.9, 525.0], [10.0, 525.0], [10.1, 525.0], [10.2, 525.0], [10.3, 526.0], [10.4, 526.0], [10.5, 526.0], [10.6, 526.0], [10.7, 526.0], [10.8, 526.0], [10.9, 526.0], [11.0, 526.0], [11.1, 526.0], [11.2, 526.0], [11.3, 527.0], [11.4, 527.0], [11.5, 527.0], [11.6, 527.0], [11.7, 527.0], [11.8, 527.0], [11.9, 527.0], [12.0, 527.0], [12.1, 527.0], [12.2, 527.0], [12.3, 527.0], [12.4, 527.0], [12.5, 528.0], [12.6, 528.0], [12.7, 528.0], [12.8, 528.0], [12.9, 528.0], [13.0, 528.0], [13.1, 528.0], [13.2, 528.0], [13.3, 529.0], [13.4, 529.0], [13.5, 529.0], [13.6, 529.0], [13.7, 529.0], [13.8, 529.0], [13.9, 530.0], [14.0, 530.0], [14.1, 530.0], [14.2, 530.0], [14.3, 530.0], [14.4, 530.0], [14.5, 530.0], [14.6, 530.0], [14.7, 530.0], [14.8, 530.0], [14.9, 530.0], [15.0, 530.0], [15.1, 530.0], [15.2, 530.0], [15.3, 531.0], [15.4, 531.0], [15.5, 531.0], [15.6, 531.0], [15.7, 531.0], [15.8, 531.0], [15.9, 531.0], [16.0, 531.0], [16.1, 532.0], [16.2, 532.0], [16.3, 532.0], [16.4, 532.0], [16.5, 532.0], [16.6, 532.0], [16.7, 533.0], [16.8, 533.0], [16.9, 533.0], [17.0, 533.0], [17.1, 533.0], [17.2, 533.0], [17.3, 533.0], [17.4, 533.0], [17.5, 534.0], [17.6, 534.0], [17.7, 534.0], [17.8, 534.0], [17.9, 534.0], [18.0, 534.0], [18.1, 534.0], [18.2, 534.0], [18.3, 534.0], [18.4, 534.0], [18.5, 535.0], [18.6, 535.0], [18.7, 535.0], [18.8, 535.0], [18.9, 535.0], [19.0, 535.0], [19.1, 535.0], [19.2, 535.0], [19.3, 535.0], [19.4, 535.0], [19.5, 535.0], [19.6, 535.0], [19.7, 536.0], [19.8, 536.0], [19.9, 536.0], [20.0, 536.0], [20.1, 537.0], [20.2, 537.0], [20.3, 537.0], [20.4, 537.0], [20.5, 537.0], [20.6, 537.0], [20.7, 537.0], [20.8, 537.0], [20.9, 538.0], [21.0, 538.0], [21.1, 538.0], [21.2, 538.0], [21.3, 538.0], [21.4, 538.0], [21.5, 538.0], [21.6, 538.0], [21.7, 538.0], [21.8, 538.0], [21.9, 539.0], [22.0, 539.0], [22.1, 539.0], [22.2, 539.0], [22.3, 539.0], [22.4, 539.0], [22.5, 540.0], [22.6, 540.0], [22.7, 541.0], [22.8, 541.0], [22.9, 541.0], [23.0, 541.0], [23.1, 541.0], [23.2, 541.0], [23.3, 541.0], [23.4, 541.0], [23.5, 542.0], [23.6, 542.0], [23.7, 542.0], [23.8, 542.0], [23.9, 543.0], [24.0, 543.0], [24.1, 543.0], [24.2, 543.0], [24.3, 543.0], [24.4, 543.0], [24.5, 544.0], [24.6, 544.0], [24.7, 544.0], [24.8, 544.0], [24.9, 544.0], [25.0, 544.0], [25.1, 544.0], [25.2, 544.0], [25.3, 544.0], [25.4, 544.0], [25.5, 544.0], [25.6, 544.0], [25.7, 544.0], [25.8, 544.0], [25.9, 545.0], [26.0, 545.0], [26.1, 545.0], [26.2, 545.0], [26.3, 545.0], [26.4, 545.0], [26.5, 546.0], [26.6, 546.0], [26.7, 547.0], [26.8, 547.0], [26.9, 547.0], [27.0, 547.0], [27.1, 547.0], [27.2, 547.0], [27.3, 547.0], [27.4, 547.0], [27.5, 548.0], [27.6, 548.0], [27.7, 548.0], [27.8, 548.0], [27.9, 549.0], [28.0, 549.0], [28.1, 549.0], [28.2, 549.0], [28.3, 549.0], [28.4, 549.0], [28.5, 549.0], [28.6, 549.0], [28.7, 550.0], [28.8, 550.0], [28.9, 550.0], [29.0, 550.0], [29.1, 550.0], [29.2, 550.0], [29.3, 550.0], [29.4, 550.0], [29.5, 550.0], [29.6, 550.0], [29.7, 551.0], [29.8, 551.0], [29.9, 551.0], [30.0, 551.0], [30.1, 551.0], [30.2, 551.0], [30.3, 551.0], [30.4, 551.0], [30.5, 551.0], [30.6, 551.0], [30.7, 552.0], [30.8, 552.0], [30.9, 552.0], [31.0, 552.0], [31.1, 552.0], [31.2, 552.0], [31.3, 552.0], [31.4, 552.0], [31.5, 552.0], [31.6, 552.0], [31.7, 552.0], [31.8, 552.0], [31.9, 552.0], [32.0, 552.0], [32.1, 553.0], [32.2, 553.0], [32.3, 553.0], [32.4, 553.0], [32.5, 553.0], [32.6, 553.0], [32.7, 554.0], [32.8, 554.0], [32.9, 554.0], [33.0, 554.0], [33.1, 554.0], [33.2, 554.0], [33.3, 554.0], [33.4, 554.0], [33.5, 554.0], [33.6, 554.0], [33.7, 554.0], [33.8, 554.0], [33.9, 554.0], [34.0, 554.0], [34.1, 554.0], [34.2, 554.0], [34.3, 554.0], [34.4, 554.0], [34.5, 554.0], [34.6, 554.0], [34.7, 554.0], [34.8, 554.0], [34.9, 555.0], [35.0, 555.0], [35.1, 555.0], [35.2, 555.0], [35.3, 555.0], [35.4, 555.0], [35.5, 556.0], [35.6, 556.0], [35.7, 556.0], [35.8, 556.0], [35.9, 556.0], [36.0, 556.0], [36.1, 556.0], [36.2, 556.0], [36.3, 556.0], [36.4, 556.0], [36.5, 557.0], [36.6, 557.0], [36.7, 557.0], [36.8, 557.0], [36.9, 557.0], [37.0, 557.0], [37.1, 557.0], [37.2, 557.0], [37.3, 557.0], [37.4, 557.0], [37.5, 558.0], [37.6, 558.0], [37.7, 558.0], [37.8, 558.0], [37.9, 558.0], [38.0, 558.0], [38.1, 558.0], [38.2, 558.0], [38.3, 558.0], [38.4, 558.0], [38.5, 558.0], [38.6, 558.0], [38.7, 559.0], [38.8, 559.0], [38.9, 559.0], [39.0, 559.0], [39.1, 559.0], [39.2, 559.0], [39.3, 559.0], [39.4, 559.0], [39.5, 559.0], [39.6, 559.0], [39.7, 559.0], [39.8, 559.0], [39.9, 559.0], [40.0, 559.0], [40.1, 559.0], [40.2, 559.0], [40.3, 560.0], [40.4, 560.0], [40.5, 560.0], [40.6, 560.0], [40.7, 560.0], [40.8, 560.0], [40.9, 560.0], [41.0, 560.0], [41.1, 560.0], [41.2, 560.0], [41.3, 561.0], [41.4, 561.0], [41.5, 561.0], [41.6, 561.0], [41.7, 561.0], [41.8, 561.0], [41.9, 561.0], [42.0, 561.0], [42.1, 562.0], [42.2, 562.0], [42.3, 562.0], [42.4, 562.0], [42.5, 562.0], [42.6, 562.0], [42.7, 563.0], [42.8, 563.0], [42.9, 563.0], [43.0, 563.0], [43.1, 563.0], [43.2, 563.0], [43.3, 563.0], [43.4, 563.0], [43.5, 563.0], [43.6, 563.0], [43.7, 564.0], [43.8, 564.0], [43.9, 564.0], [44.0, 564.0], [44.1, 564.0], [44.2, 564.0], [44.3, 564.0], [44.4, 564.0], [44.5, 564.0], [44.6, 564.0], [44.7, 564.0], [44.8, 564.0], [44.9, 564.0], [45.0, 564.0], [45.1, 565.0], [45.2, 565.0], [45.3, 565.0], [45.4, 565.0], [45.5, 565.0], [45.6, 565.0], [45.7, 565.0], [45.8, 565.0], [45.9, 566.0], [46.0, 566.0], [46.1, 566.0], [46.2, 566.0], [46.3, 567.0], [46.4, 567.0], [46.5, 567.0], [46.6, 567.0], [46.7, 567.0], [46.8, 567.0], [46.9, 568.0], [47.0, 568.0], [47.1, 568.0], [47.2, 568.0], [47.3, 569.0], [47.4, 569.0], [47.5, 570.0], [47.6, 570.0], [47.7, 570.0], [47.8, 570.0], [47.9, 570.0], [48.0, 570.0], [48.1, 570.0], [48.2, 570.0], [48.3, 571.0], [48.4, 571.0], [48.5, 571.0], [48.6, 571.0], [48.7, 571.0], [48.8, 571.0], [48.9, 571.0], [49.0, 571.0], [49.1, 571.0], [49.2, 571.0], [49.3, 571.0], [49.4, 571.0], [49.5, 571.0], [49.6, 571.0], [49.7, 571.0], [49.8, 571.0], [49.9, 572.0], [50.0, 572.0], [50.1, 572.0], [50.2, 572.0], [50.3, 572.0], [50.4, 573.0], [50.5, 573.0], [50.6, 573.0], [50.7, 573.0], [50.8, 573.0], [50.9, 573.0], [51.0, 573.0], [51.1, 573.0], [51.2, 573.0], [51.3, 573.0], [51.4, 574.0], [51.5, 574.0], [51.6, 574.0], [51.7, 574.0], [51.8, 574.0], [51.9, 574.0], [52.0, 574.0], [52.1, 574.0], [52.2, 574.0], [52.3, 574.0], [52.4, 575.0], [52.5, 575.0], [52.6, 575.0], [52.7, 575.0], [52.8, 575.0], [52.9, 575.0], [53.0, 575.0], [53.1, 575.0], [53.2, 575.0], [53.3, 575.0], [53.4, 576.0], [53.5, 576.0], [53.6, 576.0], [53.7, 576.0], [53.8, 576.0], [53.9, 576.0], [54.0, 576.0], [54.1, 576.0], [54.2, 577.0], [54.3, 577.0], [54.4, 577.0], [54.5, 577.0], [54.6, 577.0], [54.7, 577.0], [54.8, 577.0], [54.9, 577.0], [55.0, 577.0], [55.1, 577.0], [55.2, 578.0], [55.3, 578.0], [55.4, 578.0], [55.5, 578.0], [55.6, 578.0], [55.7, 578.0], [55.8, 578.0], [55.9, 578.0], [56.0, 578.0], [56.1, 578.0], [56.2, 578.0], [56.3, 578.0], [56.4, 578.0], [56.5, 578.0], [56.6, 578.0], [56.7, 578.0], [56.8, 578.0], [56.9, 578.0], [57.0, 578.0], [57.1, 578.0], [57.2, 578.0], [57.3, 578.0], [57.4, 578.0], [57.5, 578.0], [57.6, 578.0], [57.7, 578.0], [57.8, 578.0], [57.9, 578.0], [58.0, 578.0], [58.1, 578.0], [58.2, 579.0], [58.3, 579.0], [58.4, 579.0], [58.5, 579.0], [58.6, 579.0], [58.7, 579.0], [58.8, 579.0], [58.9, 579.0], [59.0, 579.0], [59.1, 579.0], [59.2, 580.0], [59.3, 580.0], [59.4, 580.0], [59.5, 580.0], [59.6, 580.0], [59.7, 580.0], [59.8, 580.0], [59.9, 580.0], [60.0, 581.0], [60.1, 581.0], [60.2, 581.0], [60.3, 581.0], [60.4, 581.0], [60.5, 581.0], [60.6, 581.0], [60.7, 581.0], [60.8, 581.0], [60.9, 581.0], [61.0, 581.0], [61.1, 581.0], [61.2, 582.0], [61.3, 582.0], [61.4, 582.0], [61.5, 582.0], [61.6, 582.0], [61.7, 582.0], [61.8, 582.0], [61.9, 582.0], [62.0, 582.0], [62.1, 582.0], [62.2, 582.0], [62.3, 582.0], [62.4, 582.0], [62.5, 582.0], [62.6, 582.0], [62.7, 582.0], [62.8, 582.0], [62.9, 582.0], [63.0, 583.0], [63.1, 583.0], [63.2, 584.0], [63.3, 584.0], [63.4, 584.0], [63.5, 584.0], [63.6, 585.0], [63.7, 585.0], [63.8, 585.0], [63.9, 585.0], [64.0, 585.0], [64.1, 585.0], [64.2, 585.0], [64.3, 585.0], [64.4, 585.0], [64.5, 585.0], [64.6, 586.0], [64.7, 586.0], [64.8, 586.0], [64.9, 586.0], [65.0, 586.0], [65.1, 586.0], [65.2, 586.0], [65.3, 586.0], [65.4, 587.0], [65.5, 587.0], [65.6, 587.0], [65.7, 587.0], [65.8, 587.0], [65.9, 587.0], [66.0, 587.0], [66.1, 587.0], [66.2, 587.0], [66.3, 587.0], [66.4, 587.0], [66.5, 587.0], [66.6, 587.0], [66.7, 587.0], [66.8, 587.0], [66.9, 587.0], [67.0, 588.0], [67.1, 588.0], [67.2, 588.0], [67.3, 588.0], [67.4, 588.0], [67.5, 588.0], [67.6, 588.0], [67.7, 588.0], [67.8, 588.0], [67.9, 588.0], [68.0, 588.0], [68.1, 588.0], [68.2, 588.0], [68.3, 588.0], [68.4, 589.0], [68.5, 589.0], [68.6, 589.0], [68.7, 589.0], [68.8, 589.0], [68.9, 589.0], [69.0, 589.0], [69.1, 589.0], [69.2, 589.0], [69.3, 589.0], [69.4, 590.0], [69.5, 590.0], [69.6, 590.0], [69.7, 590.0], [69.8, 590.0], [69.9, 590.0], [70.0, 590.0], [70.1, 590.0], [70.2, 591.0], [70.3, 591.0], [70.4, 592.0], [70.5, 592.0], [70.6, 592.0], [70.7, 592.0], [70.8, 592.0], [70.9, 592.0], [71.0, 592.0], [71.1, 592.0], [71.2, 593.0], [71.3, 593.0], [71.4, 593.0], [71.5, 593.0], [71.6, 593.0], [71.7, 593.0], [71.8, 595.0], [71.9, 595.0], [72.0, 595.0], [72.1, 595.0], [72.2, 595.0], [72.3, 595.0], [72.4, 595.0], [72.5, 595.0], [72.6, 596.0], [72.7, 596.0], [72.8, 596.0], [72.9, 596.0], [73.0, 597.0], [73.1, 597.0], [73.2, 597.0], [73.3, 597.0], [73.4, 597.0], [73.5, 597.0], [73.6, 597.0], [73.7, 597.0], [73.8, 597.0], [73.9, 597.0], [74.0, 598.0], [74.1, 598.0], [74.2, 598.0], [74.3, 598.0], [74.4, 598.0], [74.5, 598.0], [74.6, 598.0], [74.7, 598.0], [74.8, 598.0], [74.9, 598.0], [75.0, 599.0], [75.1, 599.0], [75.2, 600.0], [75.3, 600.0], [75.4, 600.0], [75.5, 600.0], [75.6, 600.0], [75.7, 600.0], [75.8, 600.0], [75.9, 600.0], [76.0, 601.0], [76.1, 601.0], [76.2, 601.0], [76.3, 601.0], [76.4, 601.0], [76.5, 601.0], [76.6, 601.0], [76.7, 601.0], [76.8, 602.0], [76.9, 602.0], [77.0, 602.0], [77.1, 602.0], [77.2, 603.0], [77.3, 603.0], [77.4, 603.0], [77.5, 603.0], [77.6, 603.0], [77.7, 603.0], [77.8, 603.0], [77.9, 603.0], [78.0, 603.0], [78.1, 603.0], [78.2, 603.0], [78.3, 603.0], [78.4, 604.0], [78.5, 604.0], [78.6, 604.0], [78.7, 604.0], [78.8, 605.0], [78.9, 605.0], [79.0, 605.0], [79.1, 605.0], [79.2, 605.0], [79.3, 605.0], [79.4, 606.0], [79.5, 606.0], [79.6, 606.0], [79.7, 606.0], [79.8, 606.0], [79.9, 606.0], [80.0, 606.0], [80.1, 606.0], [80.2, 606.0], [80.3, 606.0], [80.4, 606.0], [80.5, 606.0], [80.6, 606.0], [80.7, 606.0], [80.8, 607.0], [80.9, 607.0], [81.0, 607.0], [81.1, 607.0], [81.2, 607.0], [81.3, 607.0], [81.4, 607.0], [81.5, 607.0], [81.6, 608.0], [81.7, 608.0], [81.8, 608.0], [81.9, 608.0], [82.0, 608.0], [82.1, 608.0], [82.2, 608.0], [82.3, 608.0], [82.4, 609.0], [82.5, 609.0], [82.6, 609.0], [82.7, 609.0], [82.8, 609.0], [82.9, 609.0], [83.0, 610.0], [83.1, 610.0], [83.2, 610.0], [83.3, 610.0], [83.4, 610.0], [83.5, 610.0], [83.6, 610.0], [83.7, 610.0], [83.8, 610.0], [83.9, 610.0], [84.0, 610.0], [84.1, 610.0], [84.2, 611.0], [84.3, 611.0], [84.4, 611.0], [84.5, 611.0], [84.6, 612.0], [84.7, 612.0], [84.8, 613.0], [84.9, 613.0], [85.0, 614.0], [85.1, 614.0], [85.2, 614.0], [85.3, 614.0], [85.4, 614.0], [85.5, 614.0], [85.6, 615.0], [85.7, 615.0], [85.8, 615.0], [85.9, 615.0], [86.0, 615.0], [86.1, 615.0], [86.2, 616.0], [86.3, 616.0], [86.4, 616.0], [86.5, 616.0], [86.6, 616.0], [86.7, 616.0], [86.8, 616.0], [86.9, 616.0], [87.0, 617.0], [87.1, 617.0], [87.2, 617.0], [87.3, 617.0], [87.4, 617.0], [87.5, 617.0], [87.6, 617.0], [87.7, 617.0], [87.8, 618.0], [87.9, 618.0], [88.0, 620.0], [88.1, 620.0], [88.2, 620.0], [88.3, 620.0], [88.4, 620.0], [88.5, 620.0], [88.6, 622.0], [88.7, 622.0], [88.8, 622.0], [88.9, 622.0], [89.0, 622.0], [89.1, 622.0], [89.2, 623.0], [89.3, 623.0], [89.4, 624.0], [89.5, 624.0], [89.6, 624.0], [89.7, 624.0], [89.8, 625.0], [89.9, 625.0], [90.0, 626.0], [90.1, 626.0], [90.2, 629.0], [90.3, 629.0], [90.4, 630.0], [90.5, 630.0], [90.6, 633.0], [90.7, 633.0], [90.8, 633.0], [90.9, 633.0], [91.0, 633.0], [91.1, 633.0], [91.2, 633.0], [91.3, 633.0], [91.4, 634.0], [91.5, 634.0], [91.6, 635.0], [91.7, 635.0], [91.8, 636.0], [91.9, 636.0], [92.0, 636.0], [92.1, 636.0], [92.2, 636.0], [92.3, 636.0], [92.4, 637.0], [92.5, 637.0], [92.6, 637.0], [92.7, 637.0], [92.8, 640.0], [92.9, 640.0], [93.0, 641.0], [93.1, 641.0], [93.2, 642.0], [93.3, 642.0], [93.4, 643.0], [93.5, 643.0], [93.6, 643.0], [93.7, 643.0], [93.8, 643.0], [93.9, 643.0], [94.0, 644.0], [94.1, 644.0], [94.2, 644.0], [94.3, 644.0], [94.4, 645.0], [94.5, 645.0], [94.6, 646.0], [94.7, 646.0], [94.8, 646.0], [94.9, 646.0], [95.0, 648.0], [95.1, 648.0], [95.2, 649.0], [95.3, 649.0], [95.4, 649.0], [95.5, 649.0], [95.6, 649.0], [95.7, 649.0], [95.8, 649.0], [95.9, 649.0], [96.0, 649.0], [96.1, 649.0], [96.2, 650.0], [96.3, 650.0], [96.4, 652.0], [96.5, 652.0], [96.6, 655.0], [96.7, 655.0], [96.8, 658.0], [96.9, 658.0], [97.0, 660.0], [97.1, 660.0], [97.2, 662.0], [97.3, 662.0], [97.4, 666.0], [97.5, 666.0], [97.6, 666.0], [97.7, 666.0], [97.8, 667.0], [97.9, 667.0], [98.0, 669.0], [98.1, 669.0], [98.2, 671.0], [98.3, 671.0], [98.4, 671.0], [98.5, 671.0], [98.6, 676.0], [98.7, 676.0], [98.8, 677.0], [98.9, 677.0], [99.0, 679.0], [99.1, 679.0], [99.2, 692.0], [99.3, 692.0], [99.4, 693.0], [99.5, 693.0], [99.6, 697.0], [99.7, 697.0], [99.8, 701.0], [99.9, 701.0], [100.0, 701.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 8764.0], [0.1, 8764.0], [0.2, 10398.0], [0.3, 10398.0], [0.4, 11228.0], [0.5, 11228.0], [0.6, 11228.0], [0.7, 11242.0], [0.8, 11330.0], [0.9, 11330.0], [1.0, 11342.0], [1.1, 11342.0], [1.2, 12129.0], [1.3, 12129.0], [1.4, 12212.0], [1.5, 12212.0], [1.6, 12216.0], [1.7, 12216.0], [1.8, 12275.0], [1.9, 12275.0], [2.0, 12951.0], [2.1, 12951.0], [2.2, 13146.0], [2.3, 13146.0], [2.4, 13483.0], [2.5, 13483.0], [2.6, 13658.0], [2.7, 13658.0], [2.8, 13658.0], [2.9, 13862.0], [3.0, 13862.0], [3.1, 14007.0], [3.2, 14007.0], [3.3, 14065.0], [3.4, 14065.0], [3.5, 14256.0], [3.6, 14256.0], [3.7, 14596.0], [3.8, 14596.0], [3.9, 14872.0], [4.0, 14872.0], [4.1, 14898.0], [4.2, 14898.0], [4.3, 15570.0], [4.4, 15570.0], [4.5, 16040.0], [4.6, 16040.0], [4.7, 16094.0], [4.8, 16094.0], [4.9, 16139.0], [5.0, 16139.0], [5.1, 16152.0], [5.2, 16152.0], [5.3, 16292.0], [5.4, 16292.0], [5.5, 16295.0], [5.6, 16295.0], [5.7, 16376.0], [5.8, 16376.0], [5.9, 16624.0], [6.0, 16624.0], [6.1, 17098.0], [6.2, 17098.0], [6.3, 17114.0], [6.4, 17114.0], [6.5, 17360.0], [6.6, 17360.0], [6.7, 17419.0], [6.8, 17419.0], [6.9, 17513.0], [7.0, 17513.0], [7.1, 17621.0], [7.2, 17621.0], [7.3, 17752.0], [7.4, 17752.0], [7.5, 17797.0], [7.6, 17797.0], [7.7, 17835.0], [7.8, 17835.0], [7.9, 17861.0], [8.0, 17861.0], [8.1, 17898.0], [8.2, 17898.0], [8.3, 18069.0], [8.4, 18069.0], [8.5, 18157.0], [8.6, 18157.0], [8.7, 18345.0], [8.8, 18351.0], [8.9, 18351.0], [9.0, 18393.0], [9.1, 18393.0], [9.2, 18454.0], [9.3, 18454.0], [9.4, 18472.0], [9.5, 18472.0], [9.6, 18796.0], [9.7, 18796.0], [9.8, 18948.0], [9.9, 18948.0], [10.0, 18967.0], [10.1, 18967.0], [10.2, 19069.0], [10.3, 19069.0], [10.4, 19277.0], [10.5, 19277.0], [10.6, 19277.0], [10.7, 19277.0], [10.8, 19333.0], [10.9, 19333.0], [11.0, 19433.0], [11.1, 19433.0], [11.2, 19592.0], [11.3, 19592.0], [11.4, 19640.0], [11.5, 19640.0], [11.6, 19959.0], [11.7, 19959.0], [11.8, 20172.0], [11.9, 20172.0], [12.0, 20192.0], [12.1, 20192.0], [12.2, 20356.0], [12.3, 20356.0], [12.4, 20378.0], [12.5, 20378.0], [12.6, 20441.0], [12.7, 20441.0], [12.8, 20519.0], [12.9, 20519.0], [13.0, 20602.0], [13.1, 20602.0], [13.2, 20748.0], [13.3, 20748.0], [13.4, 20794.0], [13.5, 20794.0], [13.6, 20836.0], [13.7, 20836.0], [13.8, 20866.0], [13.9, 20866.0], [14.0, 20873.0], [14.1, 20873.0], [14.2, 20911.0], [14.3, 20911.0], [14.4, 20959.0], [14.5, 20959.0], [14.6, 21046.0], [14.7, 21046.0], [14.8, 21105.0], [14.9, 21105.0], [15.0, 21230.0], [15.1, 21230.0], [15.2, 21451.0], [15.3, 21451.0], [15.4, 21518.0], [15.5, 21518.0], [15.6, 21538.0], [15.7, 21538.0], [15.8, 21551.0], [15.9, 21551.0], [16.0, 21596.0], [16.1, 21596.0], [16.2, 21651.0], [16.3, 21651.0], [16.4, 21667.0], [16.5, 21667.0], [16.6, 21683.0], [16.7, 21683.0], [16.8, 21696.0], [16.9, 21696.0], [17.0, 21743.0], [17.1, 21743.0], [17.2, 21791.0], [17.3, 21791.0], [17.4, 21899.0], [17.5, 21899.0], [17.6, 21945.0], [17.7, 21945.0], [17.8, 21968.0], [17.9, 21968.0], [18.0, 22050.0], [18.1, 22050.0], [18.2, 22063.0], [18.3, 22063.0], [18.4, 22121.0], [18.5, 22121.0], [18.6, 22188.0], [18.7, 22188.0], [18.8, 22198.0], [18.9, 22198.0], [19.0, 22249.0], [19.1, 22249.0], [19.2, 22279.0], [19.3, 22279.0], [19.4, 22291.0], [19.5, 22291.0], [19.6, 22315.0], [19.7, 22315.0], [19.8, 22471.0], [19.9, 22471.0], [20.0, 22532.0], [20.1, 22532.0], [20.2, 22564.0], [20.3, 22564.0], [20.4, 22584.0], [20.5, 22584.0], [20.6, 22608.0], [20.7, 22608.0], [20.8, 22691.0], [20.9, 22691.0], [21.0, 22833.0], [21.1, 22833.0], [21.2, 22835.0], [21.3, 22835.0], [21.4, 22858.0], [21.5, 22858.0], [21.6, 22907.0], [21.7, 22907.0], [21.8, 23058.0], [21.9, 23058.0], [22.0, 23065.0], [22.1, 23065.0], [22.2, 23294.0], [22.3, 23294.0], [22.4, 23296.0], [22.5, 23296.0], [22.6, 23373.0], [22.7, 23373.0], [22.8, 23394.0], [22.9, 23394.0], [23.0, 23455.0], [23.1, 23455.0], [23.2, 23467.0], [23.3, 23467.0], [23.4, 23547.0], [23.5, 23547.0], [23.6, 23637.0], [23.7, 23637.0], [23.8, 23756.0], [23.9, 23756.0], [24.0, 23797.0], [24.1, 23797.0], [24.2, 23863.0], [24.3, 23863.0], [24.4, 23896.0], [24.5, 23896.0], [24.6, 23904.0], [24.7, 23904.0], [24.8, 23915.0], [24.9, 23915.0], [25.0, 24063.0], [25.1, 24063.0], [25.2, 24067.0], [25.3, 24067.0], [25.4, 24078.0], [25.5, 24078.0], [25.6, 24115.0], [25.7, 24115.0], [25.8, 24143.0], [25.9, 24143.0], [26.0, 24159.0], [26.1, 24159.0], [26.2, 24195.0], [26.3, 24195.0], [26.4, 24372.0], [26.5, 24372.0], [26.6, 24380.0], [26.7, 24380.0], [26.8, 24407.0], [26.9, 24407.0], [27.0, 24477.0], [27.1, 24477.0], [27.2, 24486.0], [27.3, 24486.0], [27.4, 24496.0], [27.5, 24496.0], [27.6, 24576.0], [27.7, 24576.0], [27.8, 24581.0], [27.9, 24581.0], [28.0, 24587.0], [28.1, 24587.0], [28.2, 24589.0], [28.3, 24589.0], [28.4, 24672.0], [28.5, 24672.0], [28.6, 24708.0], [28.7, 24708.0], [28.8, 24781.0], [28.9, 24781.0], [29.0, 24784.0], [29.1, 24784.0], [29.2, 24844.0], [29.3, 24844.0], [29.4, 24868.0], [29.5, 24868.0], [29.6, 24898.0], [29.7, 24898.0], [29.8, 24926.0], [29.9, 24926.0], [30.0, 24936.0], [30.1, 24936.0], [30.2, 24966.0], [30.3, 24966.0], [30.4, 24989.0], [30.5, 24989.0], [30.6, 25027.0], [30.7, 25027.0], [30.8, 25035.0], [30.9, 25035.0], [31.0, 25037.0], [31.1, 25037.0], [31.2, 25045.0], [31.3, 25045.0], [31.4, 25046.0], [31.5, 25046.0], [31.6, 25047.0], [31.7, 25047.0], [31.8, 25050.0], [31.9, 25050.0], [32.0, 25178.0], [32.1, 25178.0], [32.2, 25182.0], [32.3, 25182.0], [32.4, 25211.0], [32.5, 25211.0], [32.6, 25252.0], [32.7, 25252.0], [32.8, 25269.0], [32.9, 25269.0], [33.0, 25271.0], [33.1, 25271.0], [33.2, 25297.0], [33.3, 25297.0], [33.4, 25319.0], [33.5, 25319.0], [33.6, 25345.0], [33.7, 25345.0], [33.8, 25357.0], [33.9, 25357.0], [34.0, 25360.0], [34.1, 25360.0], [34.2, 25365.0], [34.3, 25365.0], [34.4, 25394.0], [34.5, 25394.0], [34.6, 25416.0], [34.7, 25416.0], [34.8, 25458.0], [34.9, 25458.0], [35.0, 25505.0], [35.1, 25505.0], [35.2, 25543.0], [35.3, 25543.0], [35.4, 25645.0], [35.5, 25645.0], [35.6, 25723.0], [35.7, 25723.0], [35.8, 25737.0], [35.9, 25737.0], [36.0, 25744.0], [36.1, 25744.0], [36.2, 25765.0], [36.3, 25765.0], [36.4, 25773.0], [36.5, 25773.0], [36.6, 25828.0], [36.7, 25828.0], [36.8, 25859.0], [36.9, 25859.0], [37.0, 25885.0], [37.1, 25885.0], [37.2, 25999.0], [37.3, 25999.0], [37.4, 26029.0], [37.5, 26029.0], [37.6, 26266.0], [37.7, 26266.0], [37.8, 26266.0], [37.9, 26293.0], [38.0, 26293.0], [38.1, 26297.0], [38.2, 26297.0], [38.3, 26321.0], [38.4, 26321.0], [38.5, 26326.0], [38.6, 26326.0], [38.7, 26331.0], [38.8, 26331.0], [38.9, 26331.0], [39.0, 26331.0], [39.1, 26347.0], [39.2, 26347.0], [39.3, 26427.0], [39.4, 26427.0], [39.5, 26473.0], [39.6, 26473.0], [39.7, 26474.0], [39.8, 26474.0], [39.9, 26513.0], [40.0, 26513.0], [40.1, 26524.0], [40.2, 26524.0], [40.3, 26527.0], [40.4, 26527.0], [40.5, 26527.0], [40.6, 26527.0], [40.7, 26564.0], [40.8, 26564.0], [40.9, 26591.0], [41.0, 26591.0], [41.1, 26595.0], [41.2, 26595.0], [41.3, 26620.0], [41.4, 26620.0], [41.5, 26629.0], [41.6, 26629.0], [41.7, 26644.0], [41.8, 26644.0], [41.9, 26669.0], [42.0, 26669.0], [42.1, 26717.0], [42.2, 26717.0], [42.3, 26738.0], [42.4, 26738.0], [42.5, 26745.0], [42.6, 26745.0], [42.7, 26907.0], [42.8, 26907.0], [42.9, 26933.0], [43.0, 26933.0], [43.1, 26980.0], [43.2, 26980.0], [43.3, 27001.0], [43.4, 27001.0], [43.5, 27055.0], [43.6, 27055.0], [43.7, 27060.0], [43.8, 27060.0], [43.9, 27084.0], [44.0, 27084.0], [44.1, 27163.0], [44.2, 27163.0], [44.3, 27179.0], [44.4, 27179.0], [44.5, 27267.0], [44.6, 27267.0], [44.7, 27296.0], [44.8, 27296.0], [44.9, 27422.0], [45.0, 27422.0], [45.1, 27449.0], [45.2, 27449.0], [45.3, 27473.0], [45.4, 27473.0], [45.5, 27478.0], [45.6, 27478.0], [45.7, 27481.0], [45.8, 27481.0], [45.9, 27525.0], [46.0, 27525.0], [46.1, 27615.0], [46.2, 27615.0], [46.3, 27650.0], [46.4, 27650.0], [46.5, 27655.0], [46.6, 27655.0], [46.7, 27680.0], [46.8, 27680.0], [46.9, 27713.0], [47.0, 27713.0], [47.1, 27742.0], [47.2, 27742.0], [47.3, 27788.0], [47.4, 27788.0], [47.5, 27860.0], [47.6, 27860.0], [47.7, 27931.0], [47.8, 27931.0], [47.9, 28019.0], [48.0, 28019.0], [48.1, 28029.0], [48.2, 28029.0], [48.3, 28044.0], [48.4, 28044.0], [48.5, 28073.0], [48.6, 28073.0], [48.7, 28088.0], [48.8, 28088.0], [48.9, 28103.0], [49.0, 28103.0], [49.1, 28163.0], [49.2, 28163.0], [49.3, 28210.0], [49.4, 28210.0], [49.5, 28213.0], [49.6, 28213.0], [49.7, 28215.0], [49.8, 28215.0], [49.9, 28246.0], [50.0, 28246.0], [50.1, 28253.0], [50.2, 28253.0], [50.3, 28286.0], [50.4, 28286.0], [50.5, 28369.0], [50.6, 28369.0], [50.7, 28402.0], [50.8, 28402.0], [50.9, 28421.0], [51.0, 28421.0], [51.1, 28449.0], [51.2, 28449.0], [51.3, 28537.0], [51.4, 28537.0], [51.5, 28538.0], [51.6, 28538.0], [51.7, 28553.0], [51.8, 28553.0], [51.9, 28557.0], [52.0, 28557.0], [52.1, 28571.0], [52.2, 28571.0], [52.3, 28576.0], [52.4, 28576.0], [52.5, 28589.0], [52.6, 28589.0], [52.7, 28613.0], [52.8, 28613.0], [52.9, 28678.0], [53.0, 28678.0], [53.1, 28696.0], [53.2, 28696.0], [53.3, 28715.0], [53.4, 28715.0], [53.5, 28734.0], [53.6, 28734.0], [53.7, 28740.0], [53.8, 28740.0], [53.9, 28783.0], [54.0, 28783.0], [54.1, 28786.0], [54.2, 28786.0], [54.3, 28825.0], [54.4, 28825.0], [54.5, 28853.0], [54.6, 28853.0], [54.7, 28863.0], [54.8, 28863.0], [54.9, 28878.0], [55.0, 28878.0], [55.1, 28925.0], [55.2, 28925.0], [55.3, 28940.0], [55.4, 28940.0], [55.5, 28951.0], [55.6, 28951.0], [55.7, 28979.0], [55.8, 28979.0], [55.9, 28982.0], [56.0, 28982.0], [56.1, 29030.0], [56.2, 29030.0], [56.3, 29048.0], [56.4, 29048.0], [56.5, 29064.0], [56.6, 29064.0], [56.7, 29089.0], [56.8, 29089.0], [56.9, 29105.0], [57.0, 29105.0], [57.1, 29106.0], [57.2, 29106.0], [57.3, 29147.0], [57.4, 29147.0], [57.5, 29159.0], [57.6, 29159.0], [57.7, 29161.0], [57.8, 29161.0], [57.9, 29181.0], [58.0, 29181.0], [58.1, 29218.0], [58.2, 29218.0], [58.3, 29243.0], [58.4, 29243.0], [58.5, 29249.0], [58.6, 29249.0], [58.7, 29285.0], [58.8, 29285.0], [58.9, 29292.0], [59.0, 29292.0], [59.1, 29304.0], [59.2, 29304.0], [59.3, 29352.0], [59.4, 29352.0], [59.5, 29389.0], [59.6, 29389.0], [59.7, 29425.0], [59.8, 29425.0], [59.9, 29435.0], [60.0, 29435.0], [60.1, 29445.0], [60.2, 29445.0], [60.3, 29453.0], [60.4, 29453.0], [60.5, 29469.0], [60.6, 29469.0], [60.7, 29498.0], [60.8, 29498.0], [60.9, 29500.0], [61.0, 29500.0], [61.1, 29533.0], [61.2, 29533.0], [61.3, 29560.0], [61.4, 29560.0], [61.5, 29604.0], [61.6, 29604.0], [61.7, 29607.0], [61.8, 29607.0], [61.9, 29724.0], [62.0, 29724.0], [62.1, 29732.0], [62.2, 29732.0], [62.3, 29750.0], [62.4, 29750.0], [62.5, 29785.0], [62.6, 29785.0], [62.7, 29791.0], [62.8, 29791.0], [62.9, 29793.0], [63.0, 29793.0], [63.1, 29800.0], [63.2, 29800.0], [63.3, 29820.0], [63.4, 29820.0], [63.5, 29835.0], [63.6, 29835.0], [63.7, 29842.0], [63.8, 29842.0], [63.9, 29842.0], [64.0, 29842.0], [64.1, 29865.0], [64.2, 29865.0], [64.3, 29912.0], [64.4, 29912.0], [64.5, 29937.0], [64.6, 29937.0], [64.7, 29958.0], [64.8, 29958.0], [64.9, 30045.0], [65.0, 30045.0], [65.1, 30048.0], [65.2, 30048.0], [65.3, 30074.0], [65.4, 30074.0], [65.5, 30074.0], [65.6, 30074.0], [65.7, 30089.0], [65.8, 30089.0], [65.9, 30125.0], [66.0, 30125.0], [66.1, 30133.0], [66.2, 30133.0], [66.3, 30149.0], [66.4, 30149.0], [66.5, 30160.0], [66.6, 30160.0], [66.7, 30175.0], [66.8, 30175.0], [66.9, 30189.0], [67.0, 30189.0], [67.1, 30212.0], [67.2, 30212.0], [67.3, 30226.0], [67.4, 30226.0], [67.5, 30295.0], [67.6, 30295.0], [67.7, 30343.0], [67.8, 30343.0], [67.9, 30367.0], [68.0, 30367.0], [68.1, 30371.0], [68.2, 30371.0], [68.3, 30374.0], [68.4, 30374.0], [68.5, 30412.0], [68.6, 30412.0], [68.7, 30417.0], [68.8, 30417.0], [68.9, 30418.0], [69.0, 30418.0], [69.1, 30494.0], [69.2, 30494.0], [69.3, 30505.0], [69.4, 30505.0], [69.5, 30523.0], [69.6, 30523.0], [69.7, 30583.0], [69.8, 30583.0], [69.9, 30586.0], [70.0, 30586.0], [70.1, 30612.0], [70.2, 30612.0], [70.3, 30622.0], [70.4, 30622.0], [70.5, 30653.0], [70.6, 30653.0], [70.7, 30669.0], [70.8, 30669.0], [70.9, 30670.0], [71.0, 30670.0], [71.1, 30673.0], [71.2, 30673.0], [71.3, 30675.0], [71.4, 30675.0], [71.5, 30715.0], [71.6, 30715.0], [71.7, 30749.0], [71.8, 30749.0], [71.9, 30784.0], [72.0, 30784.0], [72.1, 30817.0], [72.2, 30817.0], [72.3, 30903.0], [72.4, 30903.0], [72.5, 30945.0], [72.6, 30945.0], [72.7, 30979.0], [72.8, 30979.0], [72.9, 31001.0], [73.0, 31001.0], [73.1, 31010.0], [73.2, 31010.0], [73.3, 31101.0], [73.4, 31101.0], [73.5, 31116.0], [73.6, 31116.0], [73.7, 31237.0], [73.8, 31237.0], [73.9, 31307.0], [74.0, 31307.0], [74.1, 31339.0], [74.2, 31339.0], [74.3, 31347.0], [74.4, 31347.0], [74.5, 31356.0], [74.6, 31356.0], [74.7, 31417.0], [74.8, 31417.0], [74.9, 31506.0], [75.0, 31506.0], [75.1, 31523.0], [75.2, 31523.0], [75.3, 31546.0], [75.4, 31546.0], [75.5, 31565.0], [75.6, 31565.0], [75.7, 31565.0], [75.8, 31565.0], [75.9, 31583.0], [76.0, 31583.0], [76.1, 31631.0], [76.2, 31631.0], [76.3, 31664.0], [76.4, 31664.0], [76.5, 31802.0], [76.6, 31802.0], [76.7, 31846.0], [76.8, 31846.0], [76.9, 31876.0], [77.0, 31876.0], [77.1, 31877.0], [77.2, 31877.0], [77.3, 31993.0], [77.4, 31993.0], [77.5, 32057.0], [77.6, 32057.0], [77.7, 32110.0], [77.8, 32110.0], [77.9, 32116.0], [78.0, 32116.0], [78.1, 32123.0], [78.2, 32123.0], [78.3, 32155.0], [78.4, 32155.0], [78.5, 32175.0], [78.6, 32175.0], [78.7, 32213.0], [78.8, 32213.0], [78.9, 32269.0], [79.0, 32269.0], [79.1, 32283.0], [79.2, 32283.0], [79.3, 32368.0], [79.4, 32368.0], [79.5, 32424.0], [79.6, 32424.0], [79.7, 32429.0], [79.8, 32429.0], [79.9, 32456.0], [80.0, 32456.0], [80.1, 32503.0], [80.2, 32503.0], [80.3, 32514.0], [80.4, 32514.0], [80.5, 32527.0], [80.6, 32527.0], [80.7, 32530.0], [80.8, 32530.0], [80.9, 32591.0], [81.0, 32591.0], [81.1, 32619.0], [81.2, 32619.0], [81.3, 32630.0], [81.4, 32630.0], [81.5, 32639.0], [81.6, 32639.0], [81.7, 32689.0], [81.8, 32689.0], [81.9, 32696.0], [82.0, 32696.0], [82.1, 32743.0], [82.2, 32743.0], [82.3, 32912.0], [82.4, 32912.0], [82.5, 32984.0], [82.6, 32984.0], [82.7, 33030.0], [82.8, 33030.0], [82.9, 33039.0], [83.0, 33039.0], [83.1, 33046.0], [83.2, 33046.0], [83.3, 33057.0], [83.4, 33057.0], [83.5, 33095.0], [83.6, 33095.0], [83.7, 33116.0], [83.8, 33116.0], [83.9, 33128.0], [84.0, 33128.0], [84.1, 33181.0], [84.2, 33181.0], [84.3, 33186.0], [84.4, 33186.0], [84.5, 33224.0], [84.6, 33224.0], [84.7, 33226.0], [84.8, 33226.0], [84.9, 33227.0], [85.0, 33227.0], [85.1, 33227.0], [85.2, 33227.0], [85.3, 33251.0], [85.4, 33251.0], [85.5, 33560.0], [85.6, 33560.0], [85.7, 33565.0], [85.8, 33565.0], [85.9, 33585.0], [86.0, 33585.0], [86.1, 33598.0], [86.2, 33598.0], [86.3, 33681.0], [86.4, 33681.0], [86.5, 33733.0], [86.6, 33733.0], [86.7, 33755.0], [86.8, 33755.0], [86.9, 33971.0], [87.0, 33971.0], [87.1, 33996.0], [87.2, 33996.0], [87.3, 34065.0], [87.4, 34065.0], [87.5, 34102.0], [87.6, 34102.0], [87.7, 34127.0], [87.8, 34127.0], [87.9, 34166.0], [88.0, 34166.0], [88.1, 34175.0], [88.2, 34175.0], [88.3, 34201.0], [88.4, 34201.0], [88.5, 34261.0], [88.6, 34261.0], [88.7, 34425.0], [88.8, 34425.0], [88.9, 34463.0], [89.0, 34463.0], [89.1, 34765.0], [89.2, 34765.0], [89.3, 34781.0], [89.4, 34781.0], [89.5, 34786.0], [89.6, 34786.0], [89.7, 34821.0], [89.8, 34821.0], [89.9, 34875.0], [90.0, 34875.0], [90.1, 34969.0], [90.2, 34969.0], [90.3, 35093.0], [90.4, 35093.0], [90.5, 35136.0], [90.6, 35136.0], [90.7, 35157.0], [90.8, 35157.0], [90.9, 35220.0], [91.0, 35220.0], [91.1, 35246.0], [91.2, 35246.0], [91.3, 35256.0], [91.4, 35256.0], [91.5, 35333.0], [91.6, 35333.0], [91.7, 35603.0], [91.8, 35603.0], [91.9, 35698.0], [92.0, 35698.0], [92.1, 35752.0], [92.2, 35752.0], [92.3, 35884.0], [92.4, 35884.0], [92.5, 35952.0], [92.6, 35952.0], [92.7, 35961.0], [92.8, 35961.0], [92.9, 36210.0], [93.0, 36210.0], [93.1, 36391.0], [93.2, 36391.0], [93.3, 36485.0], [93.4, 36485.0], [93.5, 36654.0], [93.6, 36654.0], [93.7, 36794.0], [93.8, 36794.0], [93.9, 36801.0], [94.0, 36801.0], [94.1, 36819.0], [94.2, 36819.0], [94.3, 37124.0], [94.4, 37124.0], [94.5, 37197.0], [94.6, 37197.0], [94.7, 37967.0], [94.8, 37967.0], [94.9, 37997.0], [95.0, 37997.0], [95.1, 38081.0], [95.2, 38081.0], [95.3, 38354.0], [95.4, 38354.0], [95.5, 38802.0], [95.6, 38802.0], [95.7, 39108.0], [95.8, 39108.0], [95.9, 39157.0], [96.0, 39157.0], [96.1, 39305.0], [96.2, 39305.0], [96.3, 39425.0], [96.4, 39425.0], [96.5, 39826.0], [96.6, 39826.0], [96.7, 40189.0], [96.8, 40189.0], [96.9, 40304.0], [97.0, 40304.0], [97.1, 40671.0], [97.2, 40671.0], [97.3, 40882.0], [97.4, 40882.0], [97.5, 41322.0], [97.6, 41322.0], [97.7, 41339.0], [97.8, 41339.0], [97.9, 41603.0], [98.0, 41603.0], [98.1, 42251.0], [98.2, 42251.0], [98.3, 47147.0], [98.4, 47147.0], [98.5, 48510.0], [98.6, 48510.0], [98.7, 50440.0], [98.8, 50440.0], [98.9, 59915.0], [99.0, 59915.0], [99.1, 65444.0], [99.2, 65444.0], [99.3, 69725.0], [99.4, 69725.0], [99.5, 77241.0], [99.6, 77241.0], [99.7, 80220.0], [99.8, 80220.0], [99.9, 103632.0], [100.0, 103632.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 400.0, "maxY": 374.0, "series": [{"data": [[69100.0, 1.0], [34100.0, 3.0], [34500.0, 1.0], [35300.0, 3.0], [36500.0, 1.0], [37300.0, 1.0], [38500.0, 2.0], [38900.0, 1.0], [39700.0, 1.0], [49700.0, 1.0], [59300.0, 1.0], [8100.0, 1.0], [9800.0, 1.0], [10700.0, 3.0], [10600.0, 1.0], [11600.0, 3.0], [11500.0, 1.0], [12500.0, 1.0], [12300.0, 1.0], [13300.0, 1.0], [13100.0, 1.0], [12800.0, 1.0], [13600.0, 1.0], [13500.0, 1.0], [13400.0, 1.0], [14000.0, 1.0], [14200.0, 1.0], [14300.0, 1.0], [15000.0, 1.0], [15600.0, 3.0], [15500.0, 1.0], [15700.0, 2.0], [15400.0, 1.0], [16000.0, 1.0], [17000.0, 1.0], [16800.0, 2.0], [17200.0, 3.0], [17400.0, 1.0], [17800.0, 2.0], [18400.0, 2.0], [18800.0, 1.0], [19000.0, 1.0], [18600.0, 1.0], [19600.0, 2.0], [20000.0, 1.0], [20200.0, 4.0], [19800.0, 2.0], [20600.0, 1.0], [21200.0, 1.0], [21000.0, 5.0], [21400.0, 3.0], [20800.0, 1.0], [21600.0, 4.0], [21800.0, 1.0], [22400.0, 1.0], [22000.0, 1.0], [22800.0, 2.0], [22600.0, 1.0], [23000.0, 1.0], [23200.0, 3.0], [23400.0, 1.0], [24400.0, 6.0], [23600.0, 2.0], [24000.0, 6.0], [23800.0, 1.0], [24200.0, 2.0], [24800.0, 5.0], [25000.0, 1.0], [25200.0, 4.0], [24600.0, 4.0], [25400.0, 1.0], [25800.0, 3.0], [26400.0, 3.0], [26000.0, 6.0], [26200.0, 2.0], [26600.0, 2.0], [27400.0, 5.0], [26800.0, 4.0], [27000.0, 5.0], [27200.0, 1.0], [27600.0, 3.0], [28000.0, 3.0], [28200.0, 6.0], [27800.0, 4.0], [28400.0, 5.0], [28600.0, 4.0], [28800.0, 4.0], [29000.0, 2.0], [29200.0, 5.0], [29600.0, 3.0], [29400.0, 3.0], [29800.0, 8.0], [30000.0, 4.0], [30200.0, 3.0], [30400.0, 3.0], [30600.0, 1.0], [30800.0, 3.0], [31000.0, 6.0], [31400.0, 2.0], [31600.0, 1.0], [31200.0, 2.0], [32000.0, 4.0], [32400.0, 5.0], [31800.0, 2.0], [32600.0, 5.0], [33600.0, 2.0], [34800.0, 1.0], [35600.0, 1.0], [36000.0, 1.0], [41600.0, 1.0], [64800.0, 1.0], [76700.0, 1.0], [33100.0, 3.0], [33500.0, 4.0], [34300.0, 1.0], [34700.0, 1.0], [35100.0, 1.0], [37500.0, 1.0], [38700.0, 1.0], [39100.0, 1.0], [39500.0, 1.0], [40300.0, 1.0], [39900.0, 1.0], [40700.0, 1.0], [47900.0, 1.0], [103000.0, 1.0], [79700.0, 1.0], [16500.0, 2.0], [16700.0, 1.0], [17300.0, 1.0], [17100.0, 1.0], [17700.0, 2.0], [17900.0, 1.0], [17500.0, 1.0], [18300.0, 1.0], [18100.0, 1.0], [18700.0, 2.0], [18900.0, 1.0], [19300.0, 1.0], [19900.0, 2.0], [20300.0, 3.0], [20500.0, 1.0], [21100.0, 1.0], [20900.0, 3.0], [21300.0, 1.0], [21500.0, 2.0], [21900.0, 3.0], [22300.0, 3.0], [22100.0, 2.0], [21700.0, 2.0], [22500.0, 1.0], [23300.0, 2.0], [22700.0, 2.0], [22900.0, 2.0], [23500.0, 5.0], [23100.0, 1.0], [24100.0, 3.0], [24500.0, 4.0], [23900.0, 1.0], [24300.0, 3.0], [23700.0, 2.0], [24700.0, 6.0], [25300.0, 2.0], [24900.0, 1.0], [25100.0, 3.0], [26500.0, 2.0], [25700.0, 8.0], [25900.0, 5.0], [26300.0, 2.0], [26100.0, 1.0], [26700.0, 2.0], [26900.0, 1.0], [27300.0, 3.0], [27100.0, 2.0], [27500.0, 2.0], [27900.0, 4.0], [27700.0, 3.0], [28100.0, 6.0], [28300.0, 2.0], [28500.0, 6.0], [28900.0, 5.0], [28700.0, 5.0], [29100.0, 6.0], [29300.0, 4.0], [29500.0, 6.0], [29900.0, 5.0], [29700.0, 2.0], [30100.0, 4.0], [30300.0, 1.0], [30500.0, 2.0], [30700.0, 2.0], [31500.0, 5.0], [31300.0, 2.0], [30900.0, 2.0], [31700.0, 3.0], [31900.0, 7.0], [32100.0, 1.0], [32500.0, 5.0], [32300.0, 1.0], [33000.0, 4.0], [33400.0, 3.0], [34200.0, 2.0], [33800.0, 2.0], [34600.0, 4.0], [35000.0, 2.0], [35800.0, 2.0], [36200.0, 3.0], [36600.0, 1.0], [37400.0, 1.0], [38200.0, 1.0], [37800.0, 1.0], [40600.0, 1.0], [41000.0, 1.0], [46600.0, 1.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[600.0, 123.0], [700.0, 1.0], [400.0, 1.0], [500.0, 374.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[32900.0, 2.0], [33700.0, 2.0], [34100.0, 4.0], [34900.0, 1.0], [35700.0, 1.0], [35300.0, 1.0], [39300.0, 1.0], [40100.0, 1.0], [41300.0, 2.0], [48500.0, 1.0], [80200.0, 1.0], [69700.0, 1.0], [8700.0, 1.0], [10300.0, 1.0], [11200.0, 2.0], [11300.0, 2.0], [12200.0, 3.0], [12100.0, 1.0], [13100.0, 1.0], [12900.0, 1.0], [13800.0, 1.0], [13600.0, 1.0], [13400.0, 1.0], [14200.0, 1.0], [14000.0, 2.0], [14500.0, 1.0], [14800.0, 2.0], [15500.0, 1.0], [16100.0, 2.0], [16000.0, 2.0], [16200.0, 2.0], [16300.0, 1.0], [16600.0, 1.0], [17000.0, 1.0], [17400.0, 1.0], [17600.0, 1.0], [17800.0, 3.0], [18000.0, 1.0], [18400.0, 2.0], [19200.0, 2.0], [19000.0, 1.0], [19400.0, 1.0], [19600.0, 1.0], [20400.0, 1.0], [20600.0, 1.0], [20800.0, 3.0], [21000.0, 1.0], [21200.0, 1.0], [21400.0, 1.0], [21600.0, 4.0], [21800.0, 1.0], [22000.0, 2.0], [22200.0, 3.0], [22400.0, 1.0], [22800.0, 3.0], [22600.0, 2.0], [23000.0, 2.0], [23400.0, 2.0], [23200.0, 2.0], [23800.0, 2.0], [24000.0, 3.0], [23600.0, 1.0], [24400.0, 4.0], [24800.0, 3.0], [25000.0, 7.0], [25200.0, 5.0], [24600.0, 1.0], [25400.0, 2.0], [26400.0, 3.0], [25600.0, 1.0], [25800.0, 3.0], [26000.0, 1.0], [26200.0, 3.0], [26600.0, 4.0], [27000.0, 4.0], [27200.0, 2.0], [27400.0, 5.0], [27600.0, 4.0], [28000.0, 5.0], [27800.0, 1.0], [28200.0, 6.0], [28600.0, 3.0], [28400.0, 3.0], [29000.0, 4.0], [28800.0, 4.0], [29400.0, 6.0], [29600.0, 2.0], [29200.0, 5.0], [29800.0, 6.0], [30000.0, 5.0], [30200.0, 3.0], [30400.0, 4.0], [30600.0, 7.0], [30800.0, 1.0], [31000.0, 2.0], [31400.0, 1.0], [31200.0, 1.0], [31600.0, 2.0], [31800.0, 4.0], [32000.0, 1.0], [32400.0, 3.0], [32200.0, 3.0], [32600.0, 5.0], [33200.0, 5.0], [33600.0, 1.0], [34000.0, 1.0], [34800.0, 2.0], [34400.0, 2.0], [35200.0, 3.0], [35600.0, 2.0], [36400.0, 1.0], [36800.0, 2.0], [38000.0, 1.0], [38800.0, 1.0], [40800.0, 1.0], [41600.0, 1.0], [50400.0, 1.0], [33100.0, 4.0], [33500.0, 4.0], [33900.0, 2.0], [34700.0, 3.0], [35100.0, 2.0], [35900.0, 2.0], [36300.0, 1.0], [36700.0, 1.0], [37100.0, 2.0], [37900.0, 2.0], [38300.0, 1.0], [39100.0, 2.0], [40300.0, 1.0], [47100.0, 1.0], [59900.0, 1.0], [17300.0, 1.0], [17100.0, 1.0], [17500.0, 1.0], [17700.0, 2.0], [18300.0, 3.0], [18100.0, 1.0], [18900.0, 2.0], [18700.0, 1.0], [19300.0, 1.0], [19500.0, 1.0], [19900.0, 1.0], [20100.0, 2.0], [20300.0, 2.0], [20700.0, 2.0], [20900.0, 2.0], [20500.0, 1.0], [21100.0, 1.0], [21500.0, 4.0], [22300.0, 1.0], [21700.0, 2.0], [21900.0, 2.0], [22100.0, 3.0], [22500.0, 3.0], [22900.0, 1.0], [23300.0, 2.0], [23500.0, 1.0], [23700.0, 2.0], [23900.0, 2.0], [24100.0, 4.0], [24500.0, 4.0], [24300.0, 2.0], [24700.0, 3.0], [24900.0, 4.0], [25300.0, 6.0], [25100.0, 2.0], [25500.0, 2.0], [25700.0, 5.0], [26300.0, 5.0], [26500.0, 7.0], [25900.0, 1.0], [26700.0, 3.0], [26900.0, 3.0], [27100.0, 2.0], [27500.0, 1.0], [27900.0, 1.0], [27700.0, 3.0], [28500.0, 7.0], [28100.0, 2.0], [28300.0, 1.0], [28900.0, 5.0], [28700.0, 5.0], [29100.0, 6.0], [29300.0, 3.0], [29500.0, 3.0], [29700.0, 6.0], [29900.0, 3.0], [30300.0, 4.0], [30100.0, 6.0], [30700.0, 3.0], [30500.0, 4.0], [30900.0, 3.0], [31100.0, 2.0], [31300.0, 4.0], [31500.0, 6.0], [31900.0, 1.0], [32100.0, 5.0], [32300.0, 1.0], [32700.0, 1.0], [32500.0, 5.0], [33000.0, 5.0], [34200.0, 2.0], [35000.0, 1.0], [35800.0, 1.0], [36200.0, 1.0], [36600.0, 1.0], [39400.0, 1.0], [39800.0, 1.0], [40600.0, 1.0], [42200.0, 1.0], [65400.0, 1.0], [77200.0, 1.0], [103600.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 103600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 994.0, "series": [{"data": [[0.0, 1.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 498.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 994.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 5.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 4.999999999999999, "minX": 1.61812548E12, "maxY": 253.27702702702658, "series": [{"data": [[1.61812554E12, 4.999999999999999], [1.61812548E12, 253.27702702702658]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61812554E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 496.0, "minX": 1.0, "maxY": 103632.0, "series": [{"data": [[2.0, 79704.0], [3.0, 76736.0], [4.0, 69158.0], [5.0, 64892.0], [6.0, 59364.0], [7.0, 49774.0], [8.0, 47951.0], [9.0, 46623.0], [10.0, 41669.0], [11.0, 41012.0], [12.0, 40698.0], [13.0, 40752.0], [14.0, 39978.0], [15.0, 40328.0], [16.0, 39747.0], [17.0, 39573.0], [18.0, 39149.0], [19.0, 38903.0], [20.0, 38562.0], [21.0, 38529.0], [22.0, 38722.0], [23.0, 37811.0], [24.0, 38248.0], [25.0, 37306.0], [26.0, 37503.0], [27.0, 37441.0], [28.0, 36611.0], [29.0, 36255.0], [30.0, 36295.0], [31.0, 36547.0], [33.0, 36081.0], [32.0, 35879.0], [35.0, 35382.0], [34.0, 36290.0], [37.0, 35634.0], [36.0, 35856.0], [39.0, 35086.0], [38.0, 35330.0], [41.0, 35056.0], [40.0, 34808.0], [43.0, 35174.0], [42.0, 35394.0], [45.0, 34601.0], [44.0, 34694.0], [47.0, 34694.0], [46.0, 34297.0], [49.0, 34187.0], [48.0, 34517.0], [51.0, 34621.0], [50.0, 34721.0], [53.0, 33830.0], [52.0, 34359.0], [55.0, 33534.0], [54.0, 33620.0], [57.0, 34026.5], [59.0, 34248.0], [58.0, 33481.0], [61.0, 33444.0], [60.0, 34185.0], [63.0, 33649.0], [62.0, 33526.0], [67.0, 33124.0], [66.0, 33561.0], [65.0, 33434.0], [64.0, 33593.0], [71.0, 32475.0], [70.0, 33189.0], [69.0, 32653.0], [68.0, 33015.0], [75.0, 32572.0], [74.0, 32590.0], [73.0, 33153.0], [72.0, 33003.0], [79.0, 33066.0], [78.0, 32686.0], [77.0, 33041.0], [76.0, 32618.0], [83.0, 32123.5], [81.0, 32093.0], [80.0, 32044.0], [87.0, 32580.0], [86.0, 31867.0], [85.0, 32060.0], [84.0, 31912.0], [91.0, 32557.0], [90.0, 31910.0], [89.0, 32493.0], [88.0, 32428.0], [95.0, 31982.0], [94.0, 32518.0], [93.0, 32682.0], [92.0, 32658.0], [99.0, 32433.0], [98.0, 31994.0], [97.0, 31904.0], [96.0, 31868.0], [103.0, 32189.0], [102.0, 32049.0], [101.0, 31576.0], [100.0, 32452.0], [107.0, 31204.0], [106.0, 31574.0], [105.0, 31573.0], [104.0, 31705.0], [111.0, 31043.0], [110.0, 30942.0], [109.0, 31534.0], [108.0, 31711.0], [115.0, 31317.5], [113.0, 31791.0], [112.0, 31915.0], [119.0, 31318.0], [118.0, 31459.0], [117.0, 31228.0], [116.0, 31016.0], [123.0, 30508.0], [122.0, 30953.0], [121.0, 31467.0], [120.0, 31615.0], [127.0, 30830.0], [126.0, 31047.0], [125.0, 30733.0], [124.0, 31348.0], [135.0, 30829.0], [134.0, 31034.0], [133.0, 30045.0], [132.0, 31015.0], [131.0, 30247.0], [130.0, 30801.0], [129.0, 30471.0], [128.0, 30655.0], [143.0, 30158.0], [142.0, 30547.0], [141.0, 30145.0], [140.0, 29973.0], [139.0, 29875.0], [138.0, 30136.0], [137.0, 30552.5], [151.0, 29873.0], [150.0, 29953.0], [149.0, 29959.0], [148.0, 29856.0], [147.0, 29571.0], [146.0, 29827.0], [145.0, 29600.0], [144.0, 30228.0], [159.0, 30082.0], [158.0, 29741.0], [157.0, 30227.0], [156.0, 30418.0], [155.0, 30434.0], [154.0, 29906.0], [153.0, 30027.0], [152.0, 30062.0], [167.0, 29562.0], [166.0, 29241.0], [165.0, 29190.0], [164.0, 29882.0], [163.0, 29222.0], [162.0, 30121.0], [161.0, 29829.0], [160.0, 29997.0], [175.0, 29348.0], [174.0, 29546.0], [173.0, 29462.0], [172.0, 29800.0], [171.0, 29337.5], [169.0, 29376.0], [168.0, 29133.0], [183.0, 28859.0], [182.0, 29232.0], [181.0, 29702.0], [180.0, 29146.0], [179.0, 29467.0], [178.0, 28924.0], [177.0, 29826.0], [176.0, 29614.0], [191.0, 28928.0], [190.0, 29551.0], [189.0, 29476.0], [188.0, 29246.0], [187.0, 28755.0], [186.0, 28799.0], [185.0, 29668.0], [184.0, 29347.0], [199.0, 28817.0], [198.0, 29192.0], [197.0, 29061.0], [195.0, 28890.0], [194.0, 28488.0], [193.0, 29530.0], [192.0, 28599.0], [207.0, 28602.0], [206.0, 29192.0], [205.0, 28222.0], [204.0, 28917.0], [203.0, 29268.0], [202.0, 28681.0], [201.0, 28657.0], [200.0, 29050.0], [215.0, 28847.0], [214.0, 29070.0], [213.0, 28741.0], [212.0, 28166.0], [211.0, 28280.0], [210.0, 28446.0], [209.0, 28509.0], [208.0, 28225.0], [223.0, 28007.0], [222.0, 28263.0], [221.0, 28906.0], [220.0, 28124.0], [219.0, 28244.0], [218.0, 28745.0], [217.0, 28918.0], [216.0, 28503.0], [231.0, 28154.0], [230.0, 28058.0], [229.0, 28387.0], [228.0, 28582.0], [227.0, 27806.0], [226.0, 28588.0], [225.0, 28489.0], [224.0, 27890.0], [239.0, 28559.0], [238.0, 27812.0], [237.0, 28601.0], [236.0, 28406.0], [235.0, 27687.0], [234.0, 27962.0], [233.0, 28479.0], [232.0, 27782.0], [247.0, 27627.0], [246.0, 28257.0], [245.0, 27967.0], [244.0, 27874.0], [243.0, 28122.0], [242.0, 27548.0], [241.0, 28174.0], [240.0, 28324.0], [255.0, 28011.0], [254.0, 28148.0], [253.0, 27395.0], [252.0, 27984.0], [251.0, 27942.0], [250.0, 27393.0], [249.0, 27593.0], [248.0, 27431.0], [270.0, 26895.0], [271.0, 27208.0], [269.0, 27085.0], [268.0, 27405.0], [267.0, 27444.0], [266.0, 26704.0], [265.0, 27401.0], [264.0, 27322.0], [263.0, 27077.0], [257.0, 27156.0], [256.0, 27453.0], [259.0, 27654.0], [258.0, 27704.0], [262.0, 27051.0], [261.0, 27718.0], [260.0, 27191.0], [285.0, 25892.0], [287.0, 26486.5], [284.0, 25906.0], [275.0, 27018.0], [274.0, 26890.0], [273.0, 26407.0], [272.0, 27095.0], [283.0, 26651.0], [282.0, 26462.0], [281.0, 26878.0], [280.0, 26301.0], [279.0, 26449.0], [278.0, 26604.0], [277.0, 26889.0], [276.0, 26916.0], [302.0, 26079.0], [303.0, 26035.0], [301.0, 25916.0], [300.0, 25932.0], [299.0, 25729.0], [298.0, 26213.0], [297.0, 25766.0], [296.0, 26350.0], [295.0, 26554.0], [289.0, 25872.0], [288.0, 26040.0], [291.0, 26059.0], [290.0, 26508.0], [294.0, 26217.0], [293.0, 25743.0], [292.0, 26056.0], [318.0, 24885.0], [319.0, 24852.0], [317.0, 25886.0], [316.0, 25734.0], [315.0, 25481.0], [314.0, 25798.0], [313.0, 25237.0], [312.0, 25736.0], [311.0, 25989.0], [305.0, 26011.0], [304.0, 25222.0], [307.0, 25715.0], [306.0, 25763.0], [310.0, 25106.0], [309.0, 25974.0], [308.0, 25398.0], [333.0, 24759.0], [334.0, 25231.0], [332.0, 25016.5], [323.0, 24718.0], [321.0, 25107.0], [320.0, 25158.0], [330.0, 24864.0], [329.0, 24347.0], [328.0, 24942.0], [327.0, 24648.0], [326.0, 24793.0], [325.0, 25256.0], [324.0, 24656.0], [350.0, 24514.0], [351.0, 24074.0], [349.0, 24511.0], [348.0, 24827.0], [347.0, 24266.0], [346.0, 24524.0], [345.0, 24443.0], [344.0, 24653.5], [342.0, 24759.0], [337.0, 24593.0], [336.0, 24927.5], [339.0, 24169.0], [338.0, 24178.0], [341.0, 24000.0], [340.0, 24355.0], [366.0, 23258.0], [367.0, 23537.0], [365.0, 23851.0], [364.0, 23527.0], [363.0, 24454.0], [362.0, 24462.0], [361.0, 24105.5], [359.0, 24316.0], [353.0, 23759.0], [352.0, 24743.0], [355.0, 24444.0], [354.0, 24060.0], [358.0, 24451.0], [357.0, 23681.0], [356.0, 23747.0], [381.0, 22944.0], [382.0, 23265.0], [380.0, 23510.0], [371.0, 24011.0], [370.0, 23534.0], [369.0, 23284.0], [368.0, 24115.0], [379.0, 23188.0], [378.0, 23460.0], [377.0, 23013.0], [376.0, 23317.0], [375.0, 23594.0], [374.0, 23654.0], [373.0, 24015.0], [372.0, 24000.0], [398.0, 21761.0], [399.0, 21508.0], [397.0, 21636.0], [396.0, 21818.0], [395.0, 22479.0], [394.0, 21932.0], [393.0, 22324.0], [392.0, 22136.0], [391.0, 22031.0], [385.0, 22842.0], [384.0, 23141.0], [387.0, 22507.0], [386.0, 22691.0], [390.0, 22854.0], [389.0, 22783.0], [388.0, 22750.0], [414.0, 21450.0], [415.0, 21067.0], [413.0, 20806.0], [412.0, 21694.0], [411.0, 21677.0], [410.0, 21194.0], [409.0, 21402.0], [408.0, 21080.0], [407.0, 21095.0], [401.0, 22350.0], [400.0, 21729.0], [403.0, 22160.0], [402.0, 21994.0], [406.0, 21663.0], [405.0, 21976.0], [404.0, 22308.0], [430.0, 20535.0], [431.0, 20203.0], [428.0, 20297.0], [419.0, 21310.0], [418.0, 20955.0], [417.0, 21546.0], [416.0, 21421.0], [427.0, 20202.0], [426.0, 20324.0], [425.0, 20685.0], [424.0, 21253.0], [423.0, 21068.0], [421.0, 20937.0], [420.0, 20961.0], [446.0, 18701.0], [447.0, 18992.0], [445.0, 18800.0], [444.0, 19371.0], [443.0, 19059.0], [442.0, 18690.0], [441.0, 19935.0], [440.0, 19641.0], [439.0, 20069.0], [433.0, 19843.0], [432.0, 19995.0], [435.0, 19811.0], [434.0, 20343.0], [438.0, 19600.0], [437.0, 20301.0], [436.0, 20240.0], [461.0, 16825.0], [462.0, 17459.0], [460.0, 17178.0], [451.0, 18186.0], [450.0, 18756.0], [449.0, 18455.0], [448.0, 18440.0], [459.0, 17735.0], [458.0, 17291.0], [457.0, 17890.0], [456.0, 17744.0], [455.0, 17922.0], [454.0, 17544.0], [453.0, 17818.0], [452.0, 18367.0], [478.0, 15621.0], [479.0, 15027.0], [477.0, 15507.0], [476.0, 15742.0], [475.0, 15772.0], [474.0, 15634.0], [473.0, 16065.0], [472.0, 15480.0], [471.0, 15699.0], [465.0, 16820.0], [464.0, 17270.0], [467.0, 17032.0], [466.0, 17345.0], [470.0, 16547.0], [469.0, 16775.0], [468.0, 16508.0], [494.0, 11641.0], [495.0, 10701.0], [493.0, 11690.0], [492.0, 11506.0], [491.0, 11646.0], [490.0, 12540.0], [489.0, 12348.0], [488.0, 13328.0], [487.0, 13671.0], [480.0, 14312.0], [482.0, 13408.0], [481.0, 14254.0], [486.0, 13136.0], [485.0, 12840.0], [484.0, 13808.0], [500.0, 8156.0], [499.0, 9870.0], [498.0, 10777.0], [497.0, 10756.0], [496.0, 10694.0], [1.0, 103049.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[250.17434869739455, 27448.757515030076]], "isOverall": false, "label": "HTTP Request-1-Aggregated", "isController": false}, {"data": [[2.0, 516.0], [3.0, 504.0], [4.0, 567.0], [5.0, 551.0], [6.0, 551.0], [7.0, 666.0], [8.0, 559.0], [9.0, 524.0], [10.0, 582.0], [11.0, 588.0], [12.0, 624.0], [13.0, 587.0], [14.0, 692.0], [15.0, 554.0], [16.0, 557.0], [17.0, 616.0], [18.0, 676.0], [19.0, 522.0], [20.0, 595.0], [21.0, 579.0], [22.0, 582.0], [23.0, 542.0], [24.0, 554.0], [25.0, 637.0], [26.0, 578.0], [27.0, 525.0], [28.0, 586.0], [29.0, 546.0], [30.0, 524.0], [31.0, 577.0], [33.0, 573.0], [32.0, 606.0], [35.0, 570.0], [34.0, 504.0], [37.0, 576.0], [36.0, 535.0], [39.0, 612.0], [38.0, 554.0], [41.0, 547.0], [40.0, 524.0], [43.0, 578.0], [42.0, 566.0], [45.0, 556.0], [44.0, 562.0], [47.0, 526.0], [46.0, 578.0], [49.0, 578.0], [48.0, 576.0], [51.0, 515.0], [50.0, 525.0], [53.0, 633.0], [52.0, 610.0], [55.0, 617.0], [54.0, 569.0], [57.0, 575.5], [59.0, 573.0], [58.0, 646.0], [61.0, 552.0], [60.0, 600.0], [63.0, 610.0], [62.0, 576.0], [67.0, 556.0], [66.0, 503.0], [65.0, 537.0], [64.0, 581.0], [71.0, 571.0], [70.0, 565.0], [69.0, 571.0], [68.0, 545.0], [75.0, 523.0], [74.0, 596.0], [73.0, 580.0], [72.0, 562.0], [79.0, 518.0], [78.0, 541.0], [77.0, 557.0], [76.0, 633.0], [83.0, 596.5], [81.0, 650.0], [80.0, 629.0], [87.0, 601.0], [86.0, 648.0], [85.0, 559.0], [84.0, 578.0], [91.0, 571.0], [90.0, 603.0], [89.0, 564.0], [88.0, 611.0], [95.0, 609.0], [94.0, 598.0], [93.0, 544.0], [92.0, 568.0], [99.0, 597.0], [98.0, 644.0], [97.0, 552.0], [96.0, 555.0], [103.0, 507.0], [102.0, 581.0], [101.0, 636.0], [100.0, 531.0], [107.0, 588.0], [106.0, 542.0], [105.0, 549.0], [104.0, 578.0], [111.0, 620.0], [110.0, 581.0], [109.0, 575.0], [108.0, 558.0], [115.0, 585.0], [113.0, 577.0], [112.0, 514.0], [119.0, 559.0], [118.0, 598.0], [117.0, 574.0], [116.0, 548.0], [123.0, 608.0], [122.0, 552.0], [121.0, 526.0], [120.0, 539.0], [127.0, 526.0], [126.0, 536.0], [125.0, 614.0], [124.0, 528.0], [135.0, 588.0], [134.0, 511.0], [133.0, 607.0], [132.0, 550.0], [131.0, 655.0], [130.0, 538.0], [129.0, 530.0], [128.0, 582.0], [143.0, 591.0], [142.0, 554.0], [141.0, 527.0], [140.0, 649.0], [139.0, 641.0], [138.0, 578.0], [137.0, 573.5], [151.0, 544.0], [150.0, 630.0], [149.0, 652.0], [148.0, 561.0], [147.0, 590.0], [146.0, 544.0], [145.0, 573.0], [144.0, 589.0], [159.0, 588.0], [158.0, 554.0], [157.0, 556.0], [156.0, 561.0], [155.0, 575.0], [154.0, 587.0], [153.0, 559.0], [152.0, 607.0], [167.0, 598.0], [166.0, 558.0], [165.0, 589.0], [164.0, 530.0], [163.0, 606.0], [162.0, 554.0], [161.0, 538.0], [160.0, 508.0], [175.0, 517.0], [174.0, 587.0], [173.0, 626.0], [172.0, 574.0], [171.0, 599.0], [169.0, 582.0], [168.0, 679.0], [183.0, 593.0], [182.0, 561.0], [181.0, 523.0], [180.0, 604.0], [179.0, 578.0], [178.0, 624.0], [177.0, 517.0], [176.0, 510.0], [191.0, 605.0], [190.0, 522.0], [189.0, 572.0], [188.0, 589.0], [187.0, 633.0], [186.0, 701.0], [185.0, 544.0], [184.0, 565.0], [199.0, 535.0], [198.0, 539.0], [197.0, 553.5], [195.0, 608.0], [194.0, 617.0], [193.0, 544.0], [192.0, 643.0], [207.0, 578.0], [206.0, 593.0], [205.0, 603.0], [204.0, 528.0], [203.0, 573.0], [202.0, 537.0], [201.0, 592.0], [200.0, 554.0], [215.0, 587.0], [214.0, 536.0], [213.0, 544.0], [212.0, 563.0], [211.0, 671.0], [210.0, 532.0], [209.0, 521.0], [208.0, 637.0], [223.0, 581.0], [222.0, 600.0], [221.0, 518.0], [220.0, 616.0], [219.0, 609.0], [218.0, 558.0], [217.0, 550.0], [216.0, 560.0], [231.0, 560.0], [230.0, 554.0], [229.0, 538.0], [228.0, 577.0], [227.0, 549.0], [226.0, 558.0], [225.0, 559.0], [224.0, 658.0], [239.0, 547.0], [238.0, 590.0], [237.0, 560.0], [236.0, 576.0], [235.0, 599.0], [234.0, 575.0], [233.0, 608.0], [232.0, 667.0], [247.0, 586.0], [246.0, 529.0], [245.0, 571.0], [244.0, 547.0], [243.0, 574.0], [242.0, 615.0], [241.0, 560.0], [240.0, 616.0], [255.0, 564.0], [254.0, 530.0], [253.0, 649.0], [252.0, 587.0], [251.0, 611.0], [250.0, 669.0], [249.0, 617.0], [248.0, 662.0], [270.0, 578.0], [271.0, 580.0], [269.0, 564.0], [268.0, 526.0], [267.0, 585.0], [266.0, 563.0], [265.0, 617.0], [264.0, 537.0], [263.0, 577.0], [257.0, 557.0], [256.0, 634.0], [259.0, 592.0], [258.0, 511.0], [262.0, 563.0], [261.0, 535.0], [260.0, 551.0], [285.0, 622.0], [287.0, 520.0], [284.0, 552.0], [275.0, 507.0], [274.0, 588.0], [273.0, 587.0], [272.0, 585.0], [283.0, 528.0], [282.0, 518.0], [281.0, 571.0], [280.0, 606.0], [279.0, 605.0], [278.0, 559.0], [277.0, 533.0], [276.0, 562.0], [302.0, 550.0], [303.0, 560.0], [301.0, 596.0], [300.0, 595.0], [299.0, 618.0], [298.0, 531.0], [297.0, 555.0], [296.0, 582.0], [295.0, 530.0], [289.0, 602.0], [288.0, 604.0], [291.0, 610.0], [290.0, 552.0], [294.0, 520.0], [293.0, 554.0], [292.0, 564.0], [318.0, 620.0], [319.0, 606.0], [317.0, 541.0], [316.0, 592.0], [315.0, 547.0], [314.0, 533.0], [313.0, 527.0], [312.0, 529.0], [311.0, 535.0], [305.0, 580.0], [304.0, 636.0], [307.0, 578.0], [306.0, 568.0], [310.0, 666.0], [309.0, 590.0], [308.0, 601.0], [333.0, 606.0], [334.0, 513.0], [332.0, 560.5], [323.0, 622.0], [321.0, 615.0], [320.0, 579.0], [330.0, 530.0], [329.0, 579.0], [328.0, 601.0], [327.0, 530.0], [326.0, 564.0], [325.0, 571.0], [324.0, 555.0], [350.0, 533.0], [351.0, 598.0], [349.0, 534.0], [348.0, 518.0], [347.0, 578.0], [346.0, 526.0], [345.0, 602.0], [344.0, 544.5], [342.0, 537.0], [337.0, 589.0], [336.0, 530.5], [339.0, 615.0], [338.0, 603.0], [341.0, 565.0], [340.0, 581.0], [366.0, 597.0], [367.0, 577.0], [365.0, 625.0], [364.0, 550.0], [363.0, 535.0], [362.0, 573.0], [361.0, 571.5], [359.0, 582.0], [353.0, 597.0], [352.0, 509.0], [355.0, 583.0], [354.0, 527.0], [358.0, 515.0], [357.0, 646.0], [356.0, 660.0], [381.0, 603.0], [382.0, 532.0], [380.0, 552.0], [371.0, 578.0], [370.0, 609.0], [369.0, 620.0], [368.0, 593.0], [379.0, 567.0], [378.0, 607.0], [377.0, 623.0], [376.0, 597.0], [375.0, 565.0], [374.0, 541.0], [373.0, 561.0], [372.0, 496.0], [398.0, 554.0], [399.0, 607.0], [397.0, 643.0], [396.0, 644.0], [395.0, 579.0], [394.0, 636.0], [393.0, 534.0], [392.0, 697.0], [391.0, 563.0], [385.0, 531.0], [384.0, 540.0], [387.0, 558.0], [386.0, 605.0], [390.0, 539.0], [389.0, 671.0], [388.0, 543.0], [414.0, 517.0], [415.0, 584.0], [413.0, 645.0], [412.0, 597.0], [411.0, 521.0], [410.0, 549.0], [409.0, 543.0], [408.0, 600.0], [407.0, 582.0], [401.0, 557.0], [400.0, 519.0], [403.0, 530.0], [402.0, 570.0], [406.0, 525.0], [405.0, 556.0], [404.0, 527.0], [430.0, 570.0], [431.0, 545.0], [428.0, 538.0], [419.0, 588.0], [418.0, 563.0], [417.0, 504.0], [416.0, 640.0], [427.0, 610.0], [426.0, 635.0], [425.0, 544.0], [424.0, 538.0], [423.0, 563.5], [421.0, 601.0], [420.0, 590.0], [446.0, 575.0], [447.0, 600.0], [445.0, 633.0], [444.0, 588.0], [443.0, 581.0], [442.0, 643.0], [441.0, 505.0], [440.0, 551.0], [439.0, 533.0], [433.0, 535.0], [432.0, 524.0], [435.0, 545.0], [434.0, 567.0], [438.0, 571.0], [437.0, 572.0], [436.0, 554.0], [461.0, 578.0], [462.0, 610.0], [460.0, 574.0], [451.0, 610.0], [450.0, 521.0], [449.0, 614.0], [448.0, 527.0], [459.0, 616.0], [458.0, 570.0], [457.0, 564.0], [456.0, 649.0], [455.0, 550.0], [454.0, 613.0], [453.0, 527.0], [452.0, 580.0], [478.0, 517.0], [479.0, 543.0], [477.0, 587.0], [476.0, 553.0], [475.0, 520.0], [474.0, 518.0], [473.0, 559.0], [472.0, 559.0], [471.0, 677.0], [465.0, 693.0], [464.0, 546.0], [467.0, 589.0], [466.0, 553.0], [470.0, 551.0], [469.0, 585.0], [468.0, 606.0], [494.0, 575.0], [495.0, 541.0], [493.0, 585.0], [492.0, 622.0], [491.0, 566.0], [490.0, 606.0], [489.0, 603.0], [488.0, 534.0], [487.0, 585.0], [480.0, 586.0], [482.0, 598.0], [481.0, 603.0], [486.0, 522.0], [485.0, 642.0], [484.0, 522.5], [500.0, 608.0], [499.0, 528.0], [498.0, 564.0], [497.0, 574.0], [496.0, 534.0], [1.0, 582.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[250.17434869739455, 573.6973947895789]], "isOverall": false, "label": "HTTP Request-0-Aggregated", "isController": false}, {"data": [[2.0, 80220.0], [3.0, 77241.0], [4.0, 69725.0], [5.0, 65444.0], [6.0, 59915.0], [7.0, 50440.0], [8.0, 48510.0], [9.0, 47147.0], [10.0, 42251.0], [11.0, 41603.0], [12.0, 41322.0], [13.0, 41339.0], [14.0, 40671.0], [15.0, 40882.0], [16.0, 40304.0], [17.0, 40189.0], [18.0, 39826.0], [19.0, 39425.0], [20.0, 39157.0], [21.0, 39108.0], [22.0, 39305.0], [23.0, 38354.0], [24.0, 38802.0], [25.0, 37997.0], [26.0, 38081.0], [27.0, 37967.0], [28.0, 37197.0], [29.0, 36801.0], [30.0, 36819.0], [31.0, 37124.0], [33.0, 36654.0], [32.0, 36485.0], [35.0, 35952.0], [34.0, 36794.0], [37.0, 36210.0], [36.0, 36391.0], [39.0, 35698.0], [38.0, 35884.0], [41.0, 35603.0], [40.0, 35333.0], [43.0, 35752.0], [42.0, 35961.0], [45.0, 35157.0], [44.0, 35256.0], [47.0, 35220.0], [46.0, 34875.0], [49.0, 34765.0], [48.0, 35093.0], [51.0, 35136.0], [50.0, 35246.0], [53.0, 34463.0], [52.0, 34969.0], [55.0, 34166.0], [54.0, 34201.0], [57.0, 34603.0], [59.0, 34821.0], [58.0, 34127.0], [61.0, 33996.0], [60.0, 34786.0], [63.0, 34261.0], [62.0, 34102.0], [67.0, 33681.0], [66.0, 34065.0], [65.0, 33971.0], [64.0, 34175.0], [71.0, 33046.0], [70.0, 33755.0], [69.0, 33224.0], [68.0, 33560.0], [75.0, 33095.0], [74.0, 33186.0], [73.0, 33733.0], [72.0, 33565.0], [79.0, 33585.0], [78.0, 33227.0], [77.0, 33598.0], [76.0, 33251.0], [83.0, 32721.0], [81.0, 32743.0], [80.0, 32689.0], [87.0, 33181.0], [86.0, 32527.0], [85.0, 32619.0], [84.0, 32503.0], [91.0, 33128.0], [90.0, 32514.0], [89.0, 33057.0], [88.0, 33039.0], [95.0, 32591.0], [94.0, 33116.0], [93.0, 33226.0], [92.0, 33227.0], [99.0, 33030.0], [98.0, 32639.0], [97.0, 32456.0], [96.0, 32424.0], [103.0, 32696.0], [102.0, 32630.0], [101.0, 32213.0], [100.0, 32984.0], [107.0, 31846.0], [106.0, 32116.0], [105.0, 32123.0], [104.0, 32283.0], [111.0, 31664.0], [110.0, 31523.0], [109.0, 32110.0], [108.0, 32269.0], [115.0, 31903.0], [113.0, 32368.0], [112.0, 32429.0], [119.0, 31877.0], [118.0, 32057.0], [117.0, 31802.0], [116.0, 31565.0], [123.0, 31116.0], [122.0, 31506.0], [121.0, 31993.0], [120.0, 32155.0], [127.0, 31356.0], [126.0, 31583.0], [125.0, 31347.0], [124.0, 31876.0], [135.0, 31417.0], [134.0, 31546.0], [133.0, 30653.0], [132.0, 31565.0], [131.0, 30903.0], [130.0, 31339.0], [129.0, 31001.0], [128.0, 31237.0], [143.0, 30749.0], [142.0, 31101.0], [141.0, 30673.0], [140.0, 30622.0], [139.0, 30523.0], [138.0, 30715.0], [137.0, 31126.0], [151.0, 30417.0], [150.0, 30583.0], [149.0, 30612.0], [148.0, 30418.0], [147.0, 30175.0], [146.0, 30371.0], [145.0, 30189.0], [144.0, 30817.0], [159.0, 30670.0], [158.0, 30295.0], [157.0, 30784.0], [156.0, 30979.0], [155.0, 31010.0], [154.0, 30494.0], [153.0, 30586.0], [152.0, 30669.0], [167.0, 30160.0], [166.0, 29800.0], [165.0, 29791.0], [164.0, 30412.0], [163.0, 29842.0], [162.0, 30675.0], [161.0, 30367.0], [160.0, 30505.0], [175.0, 29865.0], [174.0, 30133.0], [173.0, 30089.0], [172.0, 30374.0], [171.0, 29936.5], [169.0, 29958.0], [168.0, 29820.0], [183.0, 29453.0], [182.0, 29793.0], [181.0, 30226.0], [180.0, 29750.0], [179.0, 30045.0], [178.0, 29560.0], [177.0, 30343.0], [176.0, 30125.0], [191.0, 29533.0], [190.0, 30074.0], [189.0, 30048.0], [188.0, 29835.0], [187.0, 29389.0], [186.0, 29500.0], [185.0, 30212.0], [184.0, 29912.0], [199.0, 29352.0], [198.0, 29732.0], [197.0, 29614.5], [195.0, 29498.0], [194.0, 29105.0], [193.0, 30074.0], [192.0, 29243.0], [207.0, 29181.0], [206.0, 29785.0], [205.0, 28825.0], [204.0, 29445.0], [203.0, 29842.0], [202.0, 29218.0], [201.0, 29249.0], [200.0, 29604.0], [215.0, 29435.0], [214.0, 29607.0], [213.0, 29285.0], [212.0, 28783.0], [211.0, 28951.0], [210.0, 28979.0], [209.0, 29030.0], [208.0, 28878.0], [223.0, 28589.0], [222.0, 28863.0], [221.0, 29425.0], [220.0, 28740.0], [219.0, 28853.0], [218.0, 29304.0], [217.0, 29469.0], [216.0, 29064.0], [231.0, 28715.0], [230.0, 28613.0], [229.0, 28925.0], [228.0, 29159.0], [227.0, 28369.0], [226.0, 29147.0], [225.0, 29048.0], [224.0, 28557.0], [239.0, 29106.0], [238.0, 28402.0], [237.0, 29161.0], [236.0, 28982.0], [235.0, 28286.0], [234.0, 28537.0], [233.0, 29089.0], [232.0, 28449.0], [247.0, 28213.0], [246.0, 28786.0], [245.0, 28538.0], [244.0, 28421.0], [243.0, 28696.0], [242.0, 28163.0], [241.0, 28734.0], [240.0, 28940.0], [255.0, 28576.0], [254.0, 28678.0], [253.0, 28044.0], [252.0, 28571.0], [251.0, 28553.0], [250.0, 28073.0], [249.0, 28210.0], [248.0, 28103.0], [270.0, 27473.0], [271.0, 27788.0], [269.0, 27650.0], [268.0, 27931.0], [267.0, 28029.0], [266.0, 27267.0], [265.0, 28019.0], [264.0, 27860.0], [263.0, 27655.0], [257.0, 27713.0], [256.0, 28088.0], [259.0, 28246.0], [258.0, 28215.0], [262.0, 27615.0], [261.0, 28253.0], [260.0, 27742.0], [285.0, 26527.0], [287.0, 27006.5], [284.0, 26473.0], [275.0, 27525.0], [274.0, 27481.0], [273.0, 27001.0], [272.0, 27680.0], [283.0, 27179.0], [282.0, 26980.0], [281.0, 27449.0], [280.0, 26907.0], [279.0, 27055.0], [278.0, 27163.0], [277.0, 27422.0], [276.0, 27478.0], [302.0, 26629.0], [303.0, 26595.0], [301.0, 26513.0], [300.0, 26527.0], [299.0, 26347.0], [298.0, 26745.0], [297.0, 26321.0], [296.0, 26933.0], [295.0, 27084.0], [289.0, 26474.0], [288.0, 26644.0], [291.0, 26669.0], [290.0, 27060.0], [294.0, 26738.0], [293.0, 26297.0], [292.0, 26620.0], [318.0, 25505.0], [319.0, 25458.0], [317.0, 26427.0], [316.0, 26326.0], [315.0, 26029.0], [314.0, 26331.0], [313.0, 25765.0], [312.0, 26266.0], [311.0, 26524.0], [305.0, 26591.0], [304.0, 25859.0], [307.0, 26293.0], [306.0, 26331.0], [310.0, 25773.0], [309.0, 26564.0], [308.0, 25999.0], [333.0, 25365.0], [334.0, 25744.0], [332.0, 25577.0], [323.0, 25367.5], [321.0, 25723.0], [320.0, 25737.0], [330.0, 25394.0], [329.0, 24926.0], [328.0, 25543.0], [327.0, 25178.0], [326.0, 25357.0], [325.0, 25828.0], [324.0, 25211.0], [350.0, 25047.0], [351.0, 24672.0], [349.0, 25046.0], [348.0, 25345.0], [347.0, 24844.0], [346.0, 25050.0], [345.0, 25045.0], [344.0, 25198.5], [342.0, 25297.0], [337.0, 25182.0], [336.0, 25458.0], [339.0, 24784.0], [338.0, 24781.0], [341.0, 24581.0], [340.0, 24936.0], [366.0, 23863.0], [367.0, 24115.0], [365.0, 24477.0], [364.0, 24078.0], [363.0, 24989.0], [362.0, 25035.0], [361.0, 24677.0], [359.0, 24898.0], [353.0, 24372.0], [352.0, 25252.0], [355.0, 25027.0], [354.0, 24587.0], [358.0, 24966.0], [357.0, 24380.0], [356.0, 24407.0], [381.0, 23547.0], [382.0, 23797.0], [380.0, 24063.0], [371.0, 24589.0], [370.0, 24143.0], [369.0, 23904.0], [368.0, 24708.0], [379.0, 23756.0], [378.0, 24067.0], [377.0, 23637.0], [376.0, 23915.0], [375.0, 24159.0], [374.0, 24195.0], [373.0, 24576.0], [372.0, 24496.0], [398.0, 22315.0], [399.0, 22121.0], [397.0, 22279.0], [396.0, 22471.0], [395.0, 23058.0], [394.0, 22584.0], [393.0, 22858.0], [392.0, 22833.0], [391.0, 22608.0], [385.0, 23373.0], [384.0, 23681.5], [387.0, 23065.0], [386.0, 23296.0], [390.0, 23394.0], [389.0, 23455.0], [388.0, 23294.0], [414.0, 21968.0], [415.0, 21651.0], [413.0, 21451.0], [412.0, 22291.0], [411.0, 22198.0], [410.0, 21743.0], [409.0, 21945.0], [408.0, 21696.0], [407.0, 21683.0], [401.0, 22907.0], [400.0, 22249.0], [403.0, 22691.0], [402.0, 22564.0], [406.0, 22188.0], [405.0, 22532.0], [404.0, 22835.0], [430.0, 21105.0], [431.0, 20748.0], [429.0, 21046.0], [428.0, 20836.0], [427.0, 20866.0], [426.0, 20959.0], [425.0, 21230.0], [424.0, 21791.0], [423.0, 21631.5], [417.0, 22050.0], [416.0, 22063.0], [419.0, 21899.0], [418.0, 21518.0], [421.0, 21538.0], [420.0, 21551.0], [446.0, 19277.0], [447.0, 19592.0], [445.0, 19433.0], [444.0, 19959.0], [443.0, 19640.0], [442.0, 19333.0], [441.0, 20441.0], [440.0, 20192.0], [439.0, 20602.0], [433.0, 20378.0], [432.0, 20519.0], [435.0, 20356.0], [434.0, 20911.0], [438.0, 20172.0], [437.0, 20873.0], [436.0, 20794.0], [461.0, 17419.0], [462.0, 18069.0], [460.0, 17752.0], [451.0, 18796.0], [450.0, 19277.0], [449.0, 19069.0], [448.0, 18967.0], [459.0, 18351.0], [458.0, 17861.0], [457.0, 18454.0], [456.0, 18393.0], [455.0, 18472.0], [454.0, 18157.0], [453.0, 18345.0], [452.0, 18948.0], [478.0, 16139.0], [479.0, 15570.0], [477.0, 16094.0], [476.0, 16295.0], [475.0, 16292.0], [474.0, 16152.0], [473.0, 16624.0], [472.0, 16040.0], [471.0, 16376.0], [465.0, 17513.0], [464.0, 17816.0], [467.0, 17621.0], [466.0, 17898.0], [470.0, 17098.0], [469.0, 17360.0], [468.0, 17114.0], [494.0, 12216.0], [495.0, 11242.0], [493.0, 12275.0], [492.0, 12129.0], [491.0, 12212.0], [490.0, 13146.0], [489.0, 12951.0], [488.0, 13862.0], [487.0, 14256.0], [480.0, 14898.0], [482.0, 14007.0], [481.0, 14872.0], [486.0, 13658.0], [485.0, 13483.0], [484.0, 14330.5], [500.0, 8764.0], [499.0, 10398.0], [498.0, 11342.0], [497.0, 11330.0], [496.0, 11228.0], [1.0, 103632.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[250.53200000000024, 28010.171999999995]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 52.5, "minX": 1.61812548E12, "maxY": 2667979.9833333334, "series": [{"data": [[1.61812554E12, 43683.2], [1.61812548E12, 2667979.9833333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.61812554E12, 52.5], [1.61812548E12, 4130.7]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61812554E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 573.6973947895789, "minX": 1.61812548E12, "maxY": 66919.33333333333, "series": [{"data": [[1.61812554E12, 66361.22222222223], [1.61812548E12, 26734.038775510217]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.61812548E12, 573.6973947895789]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.61812554E12, 66919.33333333333], [1.61812548E12, 27296.969450101828]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61812554E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 557.6666666666666, "minX": 1.61812548E12, "maxY": 30789.222222222223, "series": [{"data": [[1.61812554E12, 30789.222222222223], [1.61812548E12, 8439.365306122456]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.61812548E12, 573.6913827655316]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.61812554E12, 557.6666666666666], [1.61812548E12, 572.8167006109984]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61812554E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 274.22222222222223, "minX": 1.61812548E12, "maxY": 2733.2222222222226, "series": [{"data": [[1.61812554E12, 2733.2222222222226], [1.61812548E12, 2086.7346938775513]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.61812548E12, 282.6232464929859]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.61812554E12, 274.22222222222223], [1.61812548E12, 325.06517311608934]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61812554E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 496.0, "minX": 1.61812548E12, "maxY": 80220.0, "series": [{"data": [[1.61812554E12, 80220.0], [1.61812548E12, 42251.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.61812554E12, 79858.8], [1.61812548E12, 32686.6]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.61812554E12, 80220.0], [1.61812548E12, 39859.44]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.61812554E12, 80220.0], [1.61812548E12, 34977.69999999999]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.61812554E12, 46623.0], [1.61812548E12, 496.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.61812554E12, 62403.5], [1.61812548E12, 23510.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61812554E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 565.5, "minX": 2.0, "maxY": 103340.5, "series": [{"data": [[2.0, 59639.5], [34.0, 22057.5], [36.0, 22167.0], [42.0, 33138.5], [48.0, 27294.5], [51.0, 606.0], [50.0, 31347.5], [54.0, 32426.0], [58.0, 25196.5], [62.0, 26279.5], [4.0, 40061.5], [66.0, 24447.5], [72.0, 28271.5], [80.0, 30140.5], [94.0, 29225.0], [6.0, 25425.5], [8.0, 12988.0], [10.0, 26147.5], [12.0, 26800.5], [14.0, 16222.0], [16.0, 27670.5], [18.0, 17382.0], [20.0, 26787.0], [25.0, 20322.0], [448.0, 565.5], [30.0, 34224.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[8.0, 11043.0], [2.0, 103340.5], [25.0, 21046.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 448.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 2.0, "maxY": 7649.5, "series": [{"data": [[2.0, 1452.0], [34.0, 1232.0], [36.0, 1060.0], [42.0, 1746.5], [48.0, 1075.5], [51.0, 606.0], [50.0, 1134.0], [54.0, 1099.5], [58.0, 1015.0], [62.0, 1030.5], [4.0, 1121.5], [66.0, 1043.0], [72.0, 1174.0], [80.0, 1050.5], [94.0, 1119.5], [6.0, 1006.5], [8.0, 1053.0], [10.0, 1096.0], [12.0, 1349.5], [14.0, 1058.0], [16.0, 1184.5], [18.0, 1090.5], [20.0, 1029.5], [25.0, 1004.0], [448.0, 565.5], [30.0, 1152.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[8.0, 287.0], [2.0, 7649.5], [25.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 448.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 24.966666666666665, "minX": 1.61812548E12, "maxY": 24.966666666666665, "series": [{"data": [[1.61812548E12, 24.966666666666665]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61812548E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.61812548E12, "maxY": 16.3, "series": [{"data": [[1.61812554E12, 0.26666666666666666], [1.61812548E12, 16.3]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.61812548E12, 8.316666666666666]], "isOverall": false, "label": "301", "isController": false}, {"data": [[1.61812548E12, 0.016666666666666666]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.conn.HttpHostConnectException", "isController": false}, {"data": [[1.61812548E12, 0.03333333333333333]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}, {"data": [[1.61812554E12, 0.03333333333333333]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61812554E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.61812548E12, "maxY": 8.316666666666666, "series": [{"data": [[1.61812554E12, 0.13333333333333333], [1.61812548E12, 8.15]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.61812554E12, 0.016666666666666666], [1.61812548E12, 0.03333333333333333]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}, {"data": [[1.61812548E12, 8.316666666666666]], "isOverall": false, "label": "HTTP Request-0-success", "isController": false}, {"data": [[1.61812554E12, 0.016666666666666666], [1.61812548E12, 0.016666666666666666]], "isOverall": false, "label": "HTTP Request-1-failure", "isController": false}, {"data": [[1.61812554E12, 0.13333333333333333], [1.61812548E12, 8.15]], "isOverall": false, "label": "HTTP Request-1-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61812554E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.61812548E12, "maxY": 24.616666666666667, "series": [{"data": [[1.61812554E12, 0.26666666666666666], [1.61812548E12, 24.616666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.61812554E12, 0.03333333333333333], [1.61812548E12, 0.05]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61812554E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

